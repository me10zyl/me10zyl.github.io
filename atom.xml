<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Rainy Mood</title>
  
  <subtitle>心如止水</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.yilnz.com/"/>
  <updated>2021-12-30T08:25:12.452Z</updated>
  <id>http://www.yilnz.com/</id>
  
  <author>
    <name>allyn</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>todo</title>
    <link href="http://www.yilnz.com/todo/"/>
    <id>http://www.yilnz.com/todo/</id>
    <published>2021-12-30T08:25:12.452Z</published>
    <updated>2021-12-30T08:25:12.452Z</updated>
    
    <content type="html"><![CDATA[<p>现在开始看 HTTP 权威指南…《编码》暂时放一段落了。。。(MC实现进度拖延导致后面章节很难看)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;现在开始看 HTTP 权威指南…《编码》暂时放一段落了。。。(MC实现进度拖延导致后面章节很难看)&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python、java、js、mysql、bash的日期格式化整理</title>
    <link href="http://www.yilnz.com/python%E3%80%81java%E3%80%81js%E3%80%81mysql%E3%80%81bash%E7%9A%84%E6%97%A5%E6%9C%9F%E6%A0%BC%E5%BC%8F%E5%8C%96%E6%95%B4%E7%90%86/"/>
    <id>http://www.yilnz.com/python、java、js、mysql、bash的日期格式化整理/</id>
    <published>2021-12-22T02:07:32.000Z</published>
    <updated>2021-12-30T08:25:12.456Z</updated>
    
    <content type="html"><![CDATA[<p> 程序能用很多方式处理日期和时间，转换日期格式是一个常见的功能。以下整理一下各个语言<em>形态不一</em>的日期格式化。</p><a id="more"></a><h1 id="python的日期格式化"><a href="#python的日期格式化" class="headerlink" title="python的日期格式化"></a>python的日期格式化</h1><p>python的时间戳是标准的unix时间戳（<strong>秒</strong>），是以自从1970年1月1日午夜（历元）经过了多长时间来表示。函数time.time()用于获取当前时间戳。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line">time.time() <span class="comment"># get Timestamp</span></span><br></pre></td></tr></table></figure><p>格式化日期：</p><p>python的格式化日期函数是<code>strftime</code>，转化日期的函数为<code>strptime</code>，个人猜测分别为String format Time 和 String Parse Time的缩写。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 格式化成2016-03-20 11:45:39形式</span></span><br><span class="line"><span class="keyword">print</span> time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>, time.localtime()) </span><br><span class="line"></span><br><span class="line"><span class="comment"># 将格式字符串转换为时间戳</span></span><br><span class="line">a = <span class="string">"2016-03-20 11:45:39"</span></span><br><span class="line"><span class="keyword">print</span> time.mktime(time.strptime(a,<span class="string">"%Y-%m-%d %H:%M:%S"</span>))</span><br></pre></td></tr></table></figure><p>python中时间日期格式化符号：</p><table><thead><tr><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td><code>%a</code></td><td>当地工作日的缩写。</td><td>Sun, Mon, …, Sat (en_US);So, Mo, …, Sa (de_DE)</td><td>(1)</td></tr><tr><td><code>%A</code></td><td>本地化的星期中每日的完整名称。</td><td>Sunday, Monday, …, Saturday (en_US);Sonntag, Montag, …, Samstag (de_DE)</td><td>(1)</td></tr><tr><td><code>%w</code></td><td>以十进制数显示的工作日，其中0表示星期日，6表示星期六。</td><td>0, 1, …, 6</td><td></td></tr><tr><td><code>%d</code></td><td>补零后，以十进制数显示的月份中的一天。</td><td>01, 02, …, 31</td><td>(9)</td></tr><tr><td><code>%b</code></td><td>当地月份的缩写。</td><td>Jan, Feb, …, Dec (en_US);Jan, Feb, …, Dez (de_DE)</td><td>(1)</td></tr><tr><td><code>%B</code></td><td>本地化的月份全名。</td><td>January, February, …, December (en_US);Januar, Februar, …, Dezember (de_DE)</td><td>(1)</td></tr><tr><td><code>%m</code></td><td>补零后，以十进制数显示的月份。</td><td>01, 02, …, 12</td><td>(9)</td></tr><tr><td><code>%y</code></td><td>补零后，以十进制数表示的，不带世纪的年份。</td><td>00, 01, …, 99</td><td>(9)</td></tr><tr><td><code>%Y</code></td><td>十进制数表示的带世纪的年份。</td><td>0001, 0002, …, 2013, 2014, …, 9998, 9999</td><td>(2)</td></tr><tr><td><code>%H</code></td><td>以补零后的十进制数表示的小时（24 小时制）。</td><td>00, 01, …, 23</td><td>(9)</td></tr><tr><td><code>%I</code></td><td>以补零后的十进制数表示的小时（12 小时制）。</td><td>01, 02, …, 12</td><td>(9)</td></tr><tr><td><code>%p</code></td><td>本地化的 AM 或 PM 。</td><td>AM, PM (en_US);am, pm (de_DE)</td><td>(1), (3)</td></tr><tr><td><code>%M</code></td><td>补零后，以十进制数显示的分钟。</td><td>00, 01, …, 59</td><td>(9)</td></tr><tr><td><code>%S</code></td><td>补零后，以十进制数显示的秒。</td><td>00, 01, …, 59</td><td>(4), (9)</td></tr><tr><td><code>%f</code></td><td>Microsecond as a decimal number, zero-padded to 6 digits.</td><td>000000, 000001, …, 999999</td><td>(5)</td></tr><tr><td><code>%z</code></td><td>UTC 偏移量，格式为 <code>±HHMM[SS[.ffffff]]</code> （如果是简单型对象则为空字符串）。</td><td>(空), +0000, -0400, +1030, +063415, -030712.345216</td><td>(6)</td></tr><tr><td><code>%Z</code></td><td>时区名称（如果对象为简单型则为空字符串）。</td><td>(空), UTC, GMT</td><td>(6)</td></tr><tr><td><code>%j</code></td><td>以补零后的十进制数表示的一年中的日序号。</td><td>001, 002, …, 366</td><td>(9)</td></tr><tr><td><code>%U</code></td><td>以补零后的十进制数表示的一年中的周序号（星期日作为每周的第一天）。 在新的一年中第一个星期日之前的所有日子都被视为是在第 0 周。</td><td>00, 01, …, 53</td><td>(7), (9)</td></tr><tr><td><code>%W</code></td><td>以十进制数表示的一年中的周序号（星期一作为每周的第一天）。 在新的一年中第一个第期一之前的所有日子都被视为是在第 0 周。</td><td>00, 01, …, 53</td><td>(7), (9)</td></tr><tr><td><code>%c</code></td><td>本地化的适当日期和时间表示。</td><td>Tue Aug 16 21:30:00 1988 (en_US);Di 16 Aug 21:30:00 1988 (de_DE)</td><td>(1)</td></tr><tr><td><code>%x</code></td><td>本地化的适当日期表示。</td><td>08/16/88 (None);08/16/1988 (en_US);16.08.1988 (de_DE)</td><td>(1)</td></tr><tr><td><code>%X</code></td><td>本地化的适当时间表示。</td><td>21:30:00 (en_US);21:30:00 (de_DE)</td><td>(1)</td></tr><tr><td><code>%%</code></td><td>字面的 <code>&#39;%&#39;</code> 字符。</td><td>%</td></tr></tbody></table><h1 id="java-的日期格式化"><a href="#java-的日期格式化" class="headerlink" title="java 的日期格式化"></a>java 的日期格式化</h1><p>Java的时间戳是以自从1970年1月1日到现在的<strong>毫秒</strong>数。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Date().getTime(); <span class="comment">//get timestamp</span></span><br></pre></td></tr></table></figure><p>常用的日期格式化类：</p><p><code>SimpleDateFormat</code> is a concrete class for formatting and parsing dates in a locale-sensitive manner. It allows for formatting (date → text), parsing (text → date), and normalization.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>).format(date); <span class="comment">//格式化日期 to 字符串</span></span><br><span class="line"><span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>).format(<span class="string">"2021-12-12 10:18:16"</span>); <span class="comment">//parse 字符串 to 日期</span></span><br></pre></td></tr></table></figure><h3 id="Date-and-Time-Patterns"><a href="#Date-and-Time-Patterns" class="headerlink" title="Date and Time Patterns:"></a>Date and Time Patterns:</h3><table><thead><tr><th>Letter</th><th>Date or Time Component</th><th>Presentation</th><th>Examples</th></tr></thead><tbody><tr><td><code>G</code></td><td>Era designator</td><td><a href="https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html#text" target="_blank" rel="noopener">Text</a></td><td><code>AD</code></td></tr><tr><td><code>y</code></td><td>Year</td><td><a href="https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html#year" target="_blank" rel="noopener">Year</a></td><td><code>1996</code>; <code>96</code></td></tr><tr><td><code>Y</code></td><td>Week year</td><td><a href="https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html#year" target="_blank" rel="noopener">Year</a></td><td><code>2009</code>; <code>09</code></td></tr><tr><td><code>M</code></td><td>Month in year (context sensitive)</td><td><a href="https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html#month" target="_blank" rel="noopener">Month</a></td><td><code>July</code>; <code>Jul</code>; <code>07</code></td></tr><tr><td><code>L</code></td><td>Month in year (standalone form)</td><td><a href="https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html#month" target="_blank" rel="noopener">Month</a></td><td><code>July</code>; <code>Jul</code>; <code>07</code></td></tr><tr><td><code>w</code></td><td>Week in year</td><td><a href="https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html#number" target="_blank" rel="noopener">Number</a></td><td><code>27</code></td></tr><tr><td><code>W</code></td><td>Week in month</td><td><a href="https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html#number" target="_blank" rel="noopener">Number</a></td><td><code>2</code></td></tr><tr><td><code>D</code></td><td>Day in year</td><td><a href="https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html#number" target="_blank" rel="noopener">Number</a></td><td><code>189</code></td></tr><tr><td><code>d</code></td><td>Day in month</td><td><a href="https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html#number" target="_blank" rel="noopener">Number</a></td><td><code>10</code></td></tr><tr><td><code>F</code></td><td>Day of week in month</td><td><a href="https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html#number" target="_blank" rel="noopener">Number</a></td><td><code>2</code></td></tr><tr><td><code>E</code></td><td>Day name in week</td><td><a href="https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html#text" target="_blank" rel="noopener">Text</a></td><td><code>Tuesday</code>; <code>Tue</code></td></tr><tr><td><code>u</code></td><td>Day number of week (1 = Monday, …, 7 = Sunday)</td><td><a href="https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html#number" target="_blank" rel="noopener">Number</a></td><td><code>1</code></td></tr><tr><td><code>a</code></td><td>Am/pm marker</td><td><a href="https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html#text" target="_blank" rel="noopener">Text</a></td><td><code>PM</code></td></tr><tr><td><code>H</code></td><td>Hour in day (0-23)</td><td><a href="https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html#number" target="_blank" rel="noopener">Number</a></td><td><code>0</code></td></tr><tr><td><code>k</code></td><td>Hour in day (1-24)</td><td><a href="https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html#number" target="_blank" rel="noopener">Number</a></td><td><code>24</code></td></tr><tr><td><code>K</code></td><td>Hour in am/pm (0-11)</td><td><a href="https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html#number" target="_blank" rel="noopener">Number</a></td><td><code>0</code></td></tr><tr><td><code>h</code></td><td>Hour in am/pm (1-12)</td><td><a href="https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html#number" target="_blank" rel="noopener">Number</a></td><td><code>12</code></td></tr><tr><td><code>m</code></td><td>Minute in hour</td><td><a href="https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html#number" target="_blank" rel="noopener">Number</a></td><td><code>30</code></td></tr><tr><td><code>s</code></td><td>Second in minute</td><td><a href="https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html#number" target="_blank" rel="noopener">Number</a></td><td><code>55</code></td></tr><tr><td><code>S</code></td><td>Millisecond</td><td><a href="https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html#number" target="_blank" rel="noopener">Number</a></td><td><code>978</code></td></tr><tr><td><code>z</code></td><td>Time zone</td><td><a href="https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html#timezone" target="_blank" rel="noopener">General time zone</a></td><td><code>Pacific Standard Time</code>; <code>PST</code>; <code>GMT-08:00</code></td></tr><tr><td><code>Z</code></td><td>Time zone</td><td><a href="https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html#rfc822timezone" target="_blank" rel="noopener">RFC 822 time zone</a></td><td><code>-0800</code></td></tr><tr><td><code>X</code></td><td>Time zone</td><td><a href="https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html#iso8601timezone" target="_blank" rel="noopener">ISO 8601 time zone</a></td><td><code>-08</code>; <code>-0800</code>; <code>-08:00</code></td></tr></tbody></table><h1 id="js-的日期格式化"><a href="#js-的日期格式化" class="headerlink" title="js 的日期格式化"></a>js 的日期格式化</h1><p>JS的时间戳是以<strong>毫秒</strong>为单位的:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+<span class="keyword">new</span> <span class="built_in">Date</span>(); <span class="comment">//get timestamp</span></span><br></pre></td></tr></table></figure><p>日期的parse：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">"2021-12-22 10:41:32"</span>); <span class="comment">//Wed Dec 22 2021 10:41:32 GMT+0800 (中国标准时间)</span></span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">"2021-12-22T10:41:32+08:00"</span>);  <span class="comment">//ISO-8601 stanrdtime. Wed Dec 22 2021 10:41:32 GMT+0800 (中国标准时间)</span></span><br></pre></td></tr></table></figure><p>日期的格式化：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleString(<span class="string">"zh-CN"</span>, &#123;<span class="attr">hour12</span>:<span class="literal">false</span>&#125;).replaceAll(<span class="string">"/"</span>, <span class="string">"-"</span>); <span class="comment">//2021-12-22 10:53:07</span></span><br></pre></td></tr></table></figure><h1 id="mysql的日期格式化"><a href="#mysql的日期格式化" class="headerlink" title="mysql的日期格式化"></a>mysql的日期格式化</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select date_format(now(),&apos;%Y-%m-%d %H:%i:%s&apos;)</span><br></pre></td></tr></table></figure><ol><li>%a 缩写星期名 </li><li>%b 缩写月名 </li><li>%c 月，数值 </li><li>%D 带有英文前缀的月中的天 </li><li>%d 月的天，数值(00-31) </li><li>%e 月的天，数值(0-31) </li><li>%f 微秒 </li><li>%H 小时 (00-23) </li><li>%h 小时 (01-12) </li><li>%I 小时 (01-12) </li><li>%i 分钟，数值(00-59) </li><li>%j 年的天 (001-366) </li><li>%k 小时 (0-23) </li><li>%l 小时 (1-12) </li><li>%M 月名 </li><li>%m 月，数值(00-12) </li><li>%p AM 或 PM </li><li>%r 时间，12-小时（hh:mm:ss AM 或 PM） </li><li>%S 秒(00-59) </li><li>%s 秒(00-59) </li><li>%T 时间, 24-小时 (hh:mm:ss) </li><li>%U 周 (00-53) 星期日是一周的第一天 </li><li>%u 周 (00-53) 星期一是一周的第一天 </li><li>%V 周 (01-53) 星期日是一周的第一天，与 %X 使用 </li><li>%v 周 (01-53) 星期一是一周的第一天，与 %x 使用 </li><li>%W 星期名 </li><li>%w 周的天 （0=星期日, 6=星期六） </li><li>%X 年，其中的星期日是周的第一天，4 位，与 %V 使用 </li><li>%x 年，其中的星期一是周的第一天，4 位，与 %v 使用 </li><li>%Y 年，4 位 </li><li>%y 年，2 位 </li></ol><h1 id="bash的日期格式化"><a href="#bash的日期格式化" class="headerlink" title="bash的日期格式化"></a>bash的日期格式化</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date <span class="string">'+%Y-%m-%d %H:%M:%S'</span> <span class="comment">#2021-12-22 10:59:57</span></span><br></pre></td></tr></table></figure><p>%n : \n<br>%t :  \t<br>%H : 小时(00..23)<br>%I : 小时(01..12)<br>%k : 小时(0..23)<br>%l : 小时(1..12)<br>%M : 分钟(00..59)<br>%p : 显示本地 AM 或 PM<br>%r : 直接显示时间 (12 小时制，格式为 hh:mm:ss [AP]M)<br>%s : 从 1970 年 1 月 1 日 00:00:00 UTC 到目前为止的秒数<br>%S : 秒(00..61)<br>%T : 直接显示时间 (24 小时制)<br>%X : 相当于 %H:%M:%S<br>%Z : 显示时区 %a : 星期几 (Sun..Sat)<br>%A : 星期几 (Sunday..Saturday)<br>%b : 月份 (Jan..Dec)<br>%B : 月份 (January..December)<br>%c : 直接显示日期与时间<br>%d : 日 (01..31)<br>%D : 直接显示日期 (mm/dd/yy)<br>%h : 同 %b<br>%j : 一年中的第几天 (001..366)<br>%m : 月份 (01..12)<br>%U : 一年中的第几周 (00..53) (以 Sunday 为一周的第一天的情形)<br>%w : 一周中的第几天 (0..6)<br>%W : 一年中的第几周 (00..53) (以 Monday 为一周的第一天的情形)<br>%x : 直接显示日期 (mm/dd/yy)<br>%y : 年份的最后两位数字 (00.99)<br>%Y : 完整年份 (0000..9999)</p><h1 id="TLDR"><a href="#TLDR" class="headerlink" title="TLDR;"></a>TLDR;</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">python: %Y-%m-%d %H:%M:%S 只有md小写</span><br><span class="line"></span><br><span class="line">java: yyyy-MM-dd HH:mm:ss MH大写</span><br><span class="line"></span><br><span class="line">js: none</span><br><span class="line"></span><br><span class="line">mysql: %Y-%m-%d %H:%i:%s  YH大写，m变成i</span><br><span class="line"></span><br><span class="line">bash: +%Y-%m-%d %H:%M:%S 只有md小写</span><br></pre></td></tr></table></figure><h1 id="Refenence"><a href="#Refenence" class="headerlink" title="Refenence"></a>Refenence</h1><ol><li>python: <a href="https://www.runoob.com/python/python-date-time.html" target="_blank" rel="noopener">https://www.runoob.com/python/python-date-time.html</a></li><li>java: <a href="https://docs.oracle.com/javase/8/docs/api/" target="_blank" rel="noopener">https://docs.oracle.com/javase/8/docs/api/</a></li><li><p>javascript: <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date</a></p></li><li><p>mysql: <a href="https://database.51cto.com/art/202011/630673.htm?pc" target="_blank" rel="noopener">https://database.51cto.com/art/202011/630673.htm?pc</a></p></li><li>bash: <a href="https://www.cnblogs.com/hurryup/articles/9037218.html" target="_blank" rel="noopener">https://www.cnblogs.com/hurryup/articles/9037218.html</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 程序能用很多方式处理日期和时间，转换日期格式是一个常见的功能。以下整理一下各个语言&lt;em&gt;形态不一&lt;/em&gt;的日期格式化。&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://www.yilnz.com/tags/java/"/>
    
      <category term="mysql" scheme="http://www.yilnz.com/tags/mysql/"/>
    
      <category term="python" scheme="http://www.yilnz.com/tags/python/"/>
    
      <category term="js" scheme="http://www.yilnz.com/tags/js/"/>
    
      <category term="bash" scheme="http://www.yilnz.com/tags/bash/"/>
    
  </entry>
  
  <entry>
    <title>typora使用自定义图床-gitee</title>
    <link href="http://www.yilnz.com/typora%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9B%BE%E5%BA%8A-gitee/"/>
    <id>http://www.yilnz.com/typora使用自定义图床-gitee/</id>
    <published>2021-12-22T01:37:01.000Z</published>
    <updated>2021-12-30T08:25:12.456Z</updated>
    
    <content type="html"><![CDATA[<p>typora可以使用gitee作为图床，支持图片粘贴并一键上传到gitee，仅需要在gitee申请一个私人令牌即可。</p><a id="more"></a><h1 id="生成gitee私人令牌"><a href="#生成gitee私人令牌" class="headerlink" title="生成gitee私人令牌"></a>生成gitee私人令牌</h1><p>在gitee个人设置页面–私人令牌，点击生成新的令牌，获取到token</p><p><img src="https://gitee.com/me10zyl/filebed/raw/master/images/typora/2021-12-22_09:42:46.png" alt="image-20211222093957852"></p><h1 id="写上传脚本"><a href="#写上传脚本" class="headerlink" title="写上传脚本"></a>写上传脚本</h1><p>upload_image_to_gitee.py(支持file和http协议的图片):</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment"># gitee api https://gitee.com/api/v5/swagger#/postV5ReposOwnerRepoContentsPath</span></span><br><span class="line">imgpath=sys.argv[<span class="number">1</span>]</span><br><span class="line">time_str = time.strftime(<span class="string">"%Y-%m-%d_%H:%M:%S"</span>, time.localtime())</span><br><span class="line">need_delete = <span class="keyword">False</span></span><br><span class="line"><span class="keyword">if</span> re.match(<span class="string">'^http'</span>, imgpath):</span><br><span class="line">    urllib.request.urlretrieve(imgpath, <span class="string">"temp.png"</span>)</span><br><span class="line">    need_delete = <span class="keyword">True</span></span><br><span class="line">    imgpath = <span class="string">"temp.png"</span></span><br><span class="line"><span class="keyword">with</span> open(imgpath, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    content=base64.b64encode(f.read())</span><br><span class="line">    owner=<span class="string">'&#123;owner&#125;'</span></span><br><span class="line">    repo=<span class="string">'&#123;repo&#125;'</span></span><br><span class="line">    path=<span class="string">'images/typora/'</span> + time_str + <span class="string">".png"</span></span><br><span class="line">    data=[</span><br><span class="line">        (<span class="string">'access_token'</span>, <span class="string">'&#123;access_token&#125;'</span>),</span><br><span class="line">        (<span class="string">'content'</span>, content),</span><br><span class="line">        (<span class="string">'message'</span>, <span class="string">f'commited by upload_image_to_gitee.py - <span class="subst">&#123;time.time()&#125;</span>'</span>)</span><br><span class="line">    ]</span><br><span class="line">    res = requests.post(<span class="string">f'https://gitee.com/api/v5/repos/<span class="subst">&#123;owner&#125;</span>/<span class="subst">&#123;repo&#125;</span>/contents/<span class="subst">&#123;path&#125;</span>'</span>, data=data)</span><br><span class="line">    print(res.json()[<span class="string">"content"</span>][<span class="string">"download_url"</span>])</span><br><span class="line"><span class="keyword">if</span> need_delete:</span><br><span class="line">    os.remove(imgpath)</span><br></pre></td></tr></table></figure><p>gitee api 具体文档参考：<a href="https://gitee.com/api/v5/swagger#/postV5ReposOwnerRepoContentsPath" target="_blank" rel="noopener">https://gitee.com/api/v5/swagger#/postV5ReposOwnerRepoContentsPath</a></p><h1 id="typora-设置custom-uploader"><a href="#typora-设置custom-uploader" class="headerlink" title="typora 设置custom uploader"></a>typora 设置custom uploader</h1><p>在typora的菜单 <code>文件-&gt;偏好设置-&gt;图像</code> 中设置custom uploader, 指向python脚本</p><p><img src="https://gitee.com/me10zyl/filebed/raw/master/images/typora/2021-12-22_09:46:19.png" alt="image-20211222094617283"></p><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>点验证图片上传选项，如果能正常上传就表示成功了。以后在typora中上传图片只需要粘贴图片，然后点右键点上传就自动上传到gitee了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;typora可以使用gitee作为图床，支持图片粘贴并一键上传到gitee，仅需要在gitee申请一个私人令牌即可。&lt;/p&gt;
    
    </summary>
    
    
      <category term="typora" scheme="http://www.yilnz.com/tags/typora/"/>
    
  </entry>
  
  <entry>
    <title>方舟生存进化专用服开服步骤与非专（单人）数据转移</title>
    <link href="http://www.yilnz.com/%E6%96%B9%E8%88%9F%E7%94%9F%E5%AD%98%E8%BF%9B%E5%8C%96%E4%B8%93%E7%94%A8%E6%9C%8D%E5%BC%80%E6%9C%8D%E6%AD%A5%E9%AA%A4%E4%B8%8E%E9%9D%9E%E4%B8%93%EF%BC%88%E5%8D%95%E4%BA%BA%EF%BC%89%E6%95%B0%E6%8D%AE%E8%BD%AC%E7%A7%BB/"/>
    <id>http://www.yilnz.com/方舟生存进化专用服开服步骤与非专（单人）数据转移/</id>
    <published>2021-12-21T01:58:02.000Z</published>
    <updated>2021-12-30T08:25:12.456Z</updated>
    
    <content type="html"><![CDATA[<p>为什么要开启专用服务器？因为专用服务器没有非专的一些莫名其妙的BUG和限制。非专中其他玩家和主机有共享距离限制，尽管能调到无限大，但是在进入洞穴的时候会被强制转送到主机旁，并且进洞穴时会卡，非专不能像专用服务器一样直接将身上的物品一起传送到另外一张图，在跨方舟转移资源显得非常的麻烦，还有很多奇奇怪怪的BUG，比如整个地图都没有蜂巢等等。</p><a id="more"></a><p>接下来开始搭建专用服务器并且将单人数据转移过来。</p><h1 id="下载-steamcmd"><a href="#下载-steamcmd" class="headerlink" title="下载 steamcmd"></a>下载 steamcmd</h1><p>点击这里下载：<a href="https://steamcdn-a.akamaihd.net/client/installer/steamcmd.zip" target="_blank" rel="noopener">https://steamcdn-a.akamaihd.net/client/installer/steamcmd.zip</a></p><h1 id="下载方舟Dedicated-Server"><a href="#下载方舟Dedicated-Server" class="headerlink" title="下载方舟Dedicated Server"></a>下载方舟Dedicated Server</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.\steamcmd.exe +force_install_dir ark +login anonymous +app_update 376030 +quit</span><br><span class="line">pause</span><br></pre></td></tr></table></figure><p>将这个命令命名为installark.bat放在steamcmd的根目录，每次游戏更新只需要双击，下载游戏的文件夹为ark目录</p><h1 id="转移单人-非专模式存档"><a href="#转移单人-非专模式存档" class="headerlink" title="转移单人/非专模式存档"></a>转移单人/非专模式存档</h1><p>找到原来的方舟的<code>Saved</code>文件夹，在<code>SavedLocalArks</code>应该能找到如下的文件，他们分别是这个意思：</p><p><img src="https://gitee.com/me10zyl/filebed/raw/master/images/typora/2021-12-21_10:15:04.png" alt="QiiJbDOSSW05hd3Pehbg_Ark_SP_Transfer_SP_files_explained"></p><p><code>LocalPlayer.arkprofile</code> is your main player save information in the single player game.<br><code>LocalPlayer.profilebak</code> is a backup copy of your character information made by the game automatically.</p><p><code>XXXXXXXXXX.arktribe</code> is your tribe information, which gives your ownership of all your dinos and structures. <code>XXXXXXXXXX.tribebak</code> is a backup copy of the tribe information made automatically by the game</p><p>NOTE: The <code>XXXXXXXXXX</code> in the Ark Tribe file names is the “PlayerID” which is an internal ID number used by ark. This is completely different from your Steam64ID number (if you’re not familiar with what a Steam64ID is, we go over that in a section later on).</p><p><code>TheIsland.ark</code> is your main world save.<br>The files that begin with <code>TheIsland</code> followed by numbers are previous saves made when you exited and shut down your single player game.</p><p>If you’ve made any paintings on a map, they are contained in the <code>ServerPaintingsCache</code> folder.</p><p>最后将Config文件夹的<code>GameUserSettings.ini</code> 和<code>Engine.ini</code> 也要拷贝到steamcmd的方舟文件夹。</p><h1 id="编写开服python脚本"><a href="#编写开服python脚本" class="headerlink" title="编写开服python脚本"></a>编写开服python脚本</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Ark dedicated server script. -- by zyL 2021-11-17 14:49:28</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> psutil</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"></span><br><span class="line">print(<span class="string">"----------------select map----------------"</span>)</span><br><span class="line">print(<span class="string">"1.TheIsland"</span>)</span><br><span class="line">print(<span class="string">"2.TheCenter"</span>)</span><br><span class="line">print(<span class="string">"3.ScorchedEarth_P"</span>)</span><br><span class="line">print(<span class="string">"4.Ragnarok"</span>)</span><br><span class="line">print(<span class="string">"5.Aberration_P"</span>)</span><br><span class="line">print(<span class="string">"6.Extinction"</span>)</span><br><span class="line">print(<span class="string">"7.Valguero_P"</span>)</span><br><span class="line">print(<span class="string">"8.Genesis"</span>)</span><br><span class="line">print(<span class="string">"9.CrystalIsles"</span>)</span><br><span class="line">print(<span class="string">"10.Gen2"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mapName = <span class="keyword">None</span></span><br><span class="line">sessionName = <span class="keyword">None</span></span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">True</span>):</span><br><span class="line">    select = input()</span><br><span class="line">    <span class="keyword">if</span> select == <span class="string">"1"</span>:</span><br><span class="line">        sessionName = <span class="string">"zyl@孤岛@TheIsland"</span></span><br><span class="line">        mapName = <span class="string">"TheIsland"</span></span><br><span class="line">    <span class="keyword">elif</span> select == <span class="string">"2"</span>:</span><br><span class="line">        sessionName = <span class="string">"zyl@中心岛@TheCenter"</span></span><br><span class="line">        mapName = <span class="string">"TheCenter"</span></span><br><span class="line">    <span class="keyword">elif</span> select == <span class="string">"3"</span>:</span><br><span class="line">        sessionName = <span class="string">"zyl@焦土@ScorchedEarth"</span></span><br><span class="line">        mapName = <span class="string">"ScorchedEarth_P"</span></span><br><span class="line">    <span class="keyword">elif</span> select == <span class="string">"4"</span>:</span><br><span class="line">        sessionName = <span class="string">"zyl@仙境@Ragnarok"</span></span><br><span class="line">        mapName = <span class="string">"Ragnarok"</span></span><br><span class="line">    <span class="keyword">elif</span> select == <span class="string">"5"</span>:</span><br><span class="line">        sessionName = <span class="string">"zyl@畸变@Aberration"</span></span><br><span class="line">        mapName = <span class="string">"Aberration_P"</span></span><br><span class="line">    <span class="keyword">elif</span> select == <span class="string">"6"</span>:</span><br><span class="line">        sessionName = <span class="string">"zyl@灭绝@Extinction"</span></span><br><span class="line">        mapName = <span class="string">"Extinction"</span></span><br><span class="line">    <span class="keyword">elif</span> select == <span class="string">"7"</span>:</span><br><span class="line">        sessionName = <span class="string">"zyl@瓦尔盖罗@Valguero"</span></span><br><span class="line">        mapName = <span class="string">"Valguero_P"</span></span><br><span class="line">    <span class="keyword">elif</span> select == <span class="string">"8"</span>:</span><br><span class="line">        sessionName = <span class="string">"zyl@创世@Genesis"</span></span><br><span class="line">        mapName = <span class="string">"Genesis"</span></span><br><span class="line">    <span class="keyword">elif</span> select == <span class="string">"9"</span>:</span><br><span class="line">        sessionName = <span class="string">"zyl@水晶岛@CrystalIsles"</span></span><br><span class="line">        mapName = <span class="string">"CrystalIsles"</span></span><br><span class="line">    <span class="keyword">elif</span> select == <span class="string">"10"</span>:</span><br><span class="line">        sessionName = <span class="string">"zyl@创世2@Genesis2"</span></span><br><span class="line">        mapName = <span class="string">"Gen2"</span></span><br><span class="line">    <span class="keyword">if</span> re.findall(<span class="string">'^\d(\d)?$'</span>, select):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'plz input [1-10]'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务器进程大于2个就不运行</span></span><br><span class="line">processCount = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> proc <span class="keyword">in</span> psutil.process_iter(attrs=<span class="keyword">None</span>, ad_value=<span class="keyword">None</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># Get process name &amp; pid from process object.</span></span><br><span class="line">        processName = proc.name()</span><br><span class="line">        processID = proc.pid</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"ShooterGameServer.exe"</span> == processName:</span><br><span class="line">            print(<span class="string">'found '</span>, processName, <span class="string">" ::: "</span>, processID)</span><br><span class="line">            processCount += <span class="number">1</span></span><br><span class="line">    <span class="keyword">except</span> (psutil.NoSuchProcess, psutil.AccessDenied, psutil.ZombieProcess):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> processCount &gt;= <span class="number">2</span>:</span><br><span class="line">    print(<span class="string">"ShooterGameServer.exe process more than 2 instance"</span>)</span><br><span class="line">    exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Server instanceGame portRaw UDP portQuery portRCON port</span></span><br><span class="line"><span class="comment"># Server game instance 1777777782701527020</span></span><br><span class="line"><span class="comment"># Server game instance 2777977802701627021</span></span><br><span class="line"><span class="comment"># Server game instance 3778177822701727022</span></span><br><span class="line"><span class="comment"># Server game instance 4</span></span><br><span class="line"><span class="comment"># completely different ports9999100003701537016</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    arkPort = <span class="number">7779</span></span><br><span class="line">    queryPort = <span class="number">27016</span></span><br><span class="line">    proc = subprocess.Popen(<span class="string">r'netstat -ano'</span>, stdout=subprocess.PIPE)</span><br><span class="line">    tmp = proc.stdout.read()</span><br><span class="line">    <span class="keyword">if</span> <span class="string">"7779"</span> <span class="keyword">in</span> str(tmp):</span><br><span class="line">        arkPort = <span class="number">7777</span></span><br><span class="line">        queryPort = <span class="number">27015</span></span><br><span class="line">        print(<span class="string">"Port is open, changed port"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"Port is not open"</span>)</span><br><span class="line"></span><br><span class="line">    cmd = <span class="string">fr"start e:\steamCMD\ark\ShooterGame\Binaries\Win64\ShooterGameServer.exe <span class="subst">&#123;mapName&#125;</span>?SessionName=<span class="subst">&#123;sessionName&#125;</span>?ark_Port=<span class="subst">&#123;arkPort&#125;</span>?QueryPort=<span class="subst">&#123;queryPort&#125;</span>?AltSaveDirectoryName=<span class="subst">&#123;mapName&#125;</span>Saves?listen    -automanagedmods   -clusterid=zylcluster123 -ClusterDirOverride=E:\steamCMD\ark\ShooterGame\Saved\clusterDir"</span>  </span><br><span class="line">    print(cmd)</span><br><span class="line">    os.system(cmd)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    traceback.print_exc()</span><br><span class="line">    input()</span><br></pre></td></tr></table></figure><p>运行这个脚本</p><h1 id="端口映射"><a href="#端口映射" class="headerlink" title="端口映射"></a>端口映射</h1><table><thead><tr><th style="text-align:center">Server instance</th><th style="text-align:center">Game port</th><th style="text-align:center">Raw UDP port</th><th style="text-align:center">Query port</th><th style="text-align:center">RCON port</th></tr></thead><tbody><tr><td style="text-align:center">Server game instance 1</td><td style="text-align:center">7777</td><td style="text-align:center">7778</td><td style="text-align:center">27015</td><td style="text-align:center">27020</td></tr><tr><td style="text-align:center">Server game instance 2</td><td style="text-align:center">7779</td><td style="text-align:center">7780</td><td style="text-align:center">27016</td><td style="text-align:center">27021</td></tr><tr><td style="text-align:center">Server game instance 3</td><td style="text-align:center">7781</td><td style="text-align:center">7782</td><td style="text-align:center">27017</td><td style="text-align:center">27022</td></tr><tr><td style="text-align:center">Server game instance 4 completely different ports</td><td style="text-align:center">9999</td><td style="text-align:center">10000</td><td style="text-align:center">37015</td><td style="text-align:center">37016</td></tr></tbody></table><p>服务器需要映射2种端口，一个是游戏端口（*必须的端口，不想被别人搜索到服务器就只开这个端口，然后直连），一个是查询端口（steam服务器查找用,通常为2701X)</p><h1 id="Tool-ARK-Server-Manager"><a href="#Tool-ARK-Server-Manager" class="headerlink" title="Tool - ARK Server Manager"></a>Tool - ARK Server Manager</h1><p>You can also use this tool to manage your server when it is installed: <a href="https://steamcommunity.com/sharedfiles/filedetails/?id=468312476" target="_blank" rel="noopener">https://steamcommunity.com/sharedfiles/filedetails/?id=468312476</a></p><p><img src="https://gitee.com/me10zyl/filebed/raw/master/images/typora/2021-12-21_11:08:16.png" alt="ASM.png"></p><h1 id="模组管理工具"><a href="#模组管理工具" class="headerlink" title="模组管理工具"></a>模组管理工具</h1><p>为了方便起见，编写了一个模组管理工具，可快速添加删除和查看服务器模组</p><p><img src="https://gitee.com/me10zyl/filebed/raw/master/images/typora/2021-12-21_10:29:36.png" alt="image-20211221102929642"></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><p>How to transfer single to decidated : <a href="https://nodecraft.com/support/games/ark/uploading-your-single-player-world-to-your-private-dedicated-ark-server" target="_blank" rel="noopener">https://nodecraft.com/support/games/ark/uploading-your-single-player-world-to-your-private-dedicated-ark-server</a></p></li><li><p>steamcmd download: <a href="https://developer.valvesoftware.com/wiki/SteamCMD" target="_blank" rel="noopener">https://developer.valvesoftware.com/wiki/SteamCMD</a></p></li><li><p>ark server configuartion: <a href="https://ark.fandom.com/wiki/Server_configuration" target="_blank" rel="noopener">https://ark.fandom.com/wiki/Server_configuration</a></p></li><li><p>ark dedicate configuation: <a href="https://ark.fandom.com/wiki/Dedicated_server_setup" target="_blank" rel="noopener">https://ark.fandom.com/wiki/Dedicated_server_setup</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为什么要开启专用服务器？因为专用服务器没有非专的一些莫名其妙的BUG和限制。非专中其他玩家和主机有共享距离限制，尽管能调到无限大，但是在进入洞穴的时候会被强制转送到主机旁，并且进洞穴时会卡，非专不能像专用服务器一样直接将身上的物品一起传送到另外一张图，在跨方舟转移资源显得非常的麻烦，还有很多奇奇怪怪的BUG，比如整个地图都没有蜂巢等等。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Ark" scheme="http://www.yilnz.com/tags/Ark/"/>
    
  </entry>
  
  <entry>
    <title>常用软件整理与知识梳理</title>
    <link href="http://www.yilnz.com/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E6%95%B4%E7%90%86%E4%B8%8E%E7%9F%A5%E8%AF%86%E6%A2%B3%E7%90%86/"/>
    <id>http://www.yilnz.com/常用软件整理与知识梳理/</id>
    <published>2021-12-17T06:11:34.000Z</published>
    <updated>2021-12-30T08:25:12.452Z</updated>
    
    <content type="html"><![CDATA[<p>这是一篇整理思绪的文章。</p><a id="more"></a><h1 id="我的常用软件"><a href="#我的常用软件" class="headerlink" title="我的常用软件"></a>我的常用软件</h1><ul><li><p><strong>total commander</strong> 非常好用的一款文件资源管理器，支持双窗口操作，不过配置起来有些麻烦，所以我直接使用的是别人的配置文件-&gt; <a href="xbeta.info">善用佳软</a>，然后慢慢的形成自己的配置文件，现在配置文件放在<code>Onedrive/Totalcommander/GHISLER_公司电脑</code> 目录, 包含 <code>wincmd.ini</code> （主要配置文件) ，和 <code>usercmd.ini</code>（自定义命令），软件放在<code>Onedrive/Totalcommander/tc</code>目录，它的插件放在<code>OneDrive/tc插件2/plugins</code>目录，包含了<code>wfx_registry_5.2_x64</code>、<code>wfx_uninstaller64_1.0.1</code>等等插件。我设置的软件快捷启动键：Win+1，之前是用的Win+E启动的，是使用的一个AHK脚本，后来因为使用AHK玩游戏有可能被封的问题就再不使用AHK。</p><p>之前的AHK脚本 tcrun.ahk：</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">#NoTrayIcon</span><br><span class="line">#SingleInstance force</span><br><span class="line"><span class="built_in">DetectHiddenWindows,</span>On</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">;~ DetectHiddenText,On</span></span><br><span class="line"><span class="comment">;#t::run E:\TotalCommander\TOTALCMD64.EXE /O</span></span><br><span class="line"><span class="comment">;-------------------TC--------------------------</span></span><br><span class="line"><span class="symbol">#e::</span></span><br><span class="line"><span class="comment">;Win + E</span></span><br><span class="line"><span class="built_in">IfWinNotExist,</span> <span class="keyword">ahk_class</span> TTOTAL_CMD</span><br><span class="line"><span class="comment">;不存在就运行TC</span></span><br><span class="line"><span class="built_in">    Run,</span>E:\TotalCommander\TOTALCMD64.EXE /O</span><br><span class="line"><span class="comment">;~ #t::run E:\TotalCommander\TOTALCMD64.EXE /O</span></span><br><span class="line"><span class="comment">;存在就激活</span></span><br><span class="line">Else</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">    IfWinActive,</span> <span class="keyword">ahk_class</span> TTOTAL_CMD</span><br><span class="line"><span class="comment">;</span></span><br><span class="line"><span class="built_in">       WinMinimize,</span> </span><br><span class="line"><span class="comment">;</span></span><br><span class="line">    Else</span><br><span class="line"><span class="built_in">       WinActivate,</span></span><br><span class="line"><span class="comment">;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="comment">;-------------------Everthing-------------------</span></span><br><span class="line"><span class="symbol">#f::</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;Win + F</span></span><br><span class="line"><span class="built_in">IfWinNotExist,</span> <span class="keyword">ahk_class</span> EVERYTHING</span><br><span class="line"><span class="comment">;</span></span><br><span class="line"><span class="built_in">    Run,</span><span class="string">"E:\Everything\Everything.exe"</span></span><br><span class="line"><span class="comment">;~ #t::run E:\TotalCommander\TOTALCMD64.EXE /O</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;</span></span><br><span class="line">Else</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">    IfWinActive,</span> <span class="keyword">ahk_class</span> EVERYTHING</span><br><span class="line"><span class="comment">;</span></span><br><span class="line"><span class="built_in">       WinClose,</span></span><br><span class="line"><span class="comment">;</span></span><br><span class="line">    Else</span><br><span class="line"><span class="built_in">       WinActivate,</span></span><br><span class="line"><span class="comment">;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p><strong>Everything</strong> 一款快速搜索文件的软件，非常好用，目前的快捷键是Win+2，之前是Win+F，由于相同的原因，不再使用AHK。软件放在<code>OneDrive\小工具\Everything-1.4.1.969.x64-Setup.exe</code>目录</p></li><li><p><strong>XShell</strong> 很好用的终端连接工具，目录为<code>OneDrive\小工具\Xshell-6.0.0118r.zip</code></p></li><li><p><strong>keepass</strong> 很安全的密码管理工具，现在我不记密码了，都是用的随机密码，keepass的数据库是使用的坚果云的免费dav服务，存在云端，当然，我自己在电脑是也会定时(每天4点)去拉取这个云端的数据库来备份。</p><p>这里是备份脚本<code>/Onedrive/scripts/sync-keepass</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">curl --user <span class="string">'&#123;username&#125;:&#123;password&#125;'</span> <span class="string">'https://dav.jianguoyun.com/dav/&#123;kdbx&#125;'</span> -o <span class="string">'/mnt/e/data/百度云盘同步/OneDrive/kee/zyl.kdbx'</span></span><br></pre></td></tr></table></figure><p>定时任务是使用的crontab:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br><span class="line">0 16 * * * sh <span class="string">"/mnt/e/data/百度云盘同步/OneDrive/scripts/sync-keepass"</span></span><br></pre></td></tr></table></figure><p>我使用的是Windows系统，但是这里用到了crontab命令，是因为我使用了WSL(Windows Subsystem Linux)，在微软商店搜索Ubuntu即可安装，注意crontab这个服务并不会开机自动启动，需要在windows的<code>任务计划程序</code>中定时开启才行：</p><p><img src="https://gitee.com/me10zyl/filebed/raw/master/images/2021-12-17_15-44-13.pngimage-20211217154255947.png" alt=""></p></li></ul><p>启动cron的poswershell脚本如下(参数是<code>-File e:\data\百度云盘同步\OneDrive\scripts\start-cron.ps1</code>)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c <span class="string">"echo '1' | sudo -S service cron start"</span></span><br></pre></td></tr></table></figure><ul><li><p><strong>utools</strong> 一个效率工具平台，类似于alfred，可输入相应命令执行操作，由electron制作，可以很容易编写自己的专属插件。</p></li><li><p><strong>Ubuntu</strong> 这是windows subsystem linux 的一个实现，在windows商店可以下载，在命令行中输入wsl即可进入linux终端，通常我使用的是<code>Windows Terminal</code>来作为终端。</p></li><li><p><strong>Windows Terminal</strong> 微软官方出的一个终端，很好用，Win+R执行<code>wt</code>即可唤出，可配置多个Profile，不同的Tab可打开不同的Profile，比如一个终端窗口可以同时打开cmd、Powershell、wsl三种shell。不过缺点还是有的，打开有点慢，我在Total Commander的<code>usercmd.ini</code>中绑定了快捷键打开windows terminal，快捷键是<code>ctrl+G</code>。</p><p>usercmd.ini:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[em_windowsterminal]</span></span><br><span class="line"><span class="attr">cmd</span>=wt.exe</span><br><span class="line"><span class="attr">param</span>=<span class="string">"-d "</span>%P <span class="string">""</span></span><br></pre></td></tr></table></figure><p>在<code>intellij idea</code>中的<code>external tools</code>也绑定相同的快捷键：</p><p><img src="https://gitee.com/me10zyl/filebed/raw/master/images/2021-12-17_17-10-57.pngimage-20211217171029269.png" alt=""></p><ul><li><p><strong>anki</strong> 背书专用软件，通过科学的记忆方法 - 抽卡片的方式来防止你忘记东西，偶尔没事的时候就可以拿出来背一下，里面的牌组是可以自己制作的，我一般使用<code>python</code>来批量抓取资源制作牌组，牌组放在<code>OneDrive\anki\</code>， 我现在的牌组：</p><p><img src="https://gitee.com/me10zyl/filebed/raw/master/images/typora/2021-12-20_17:33:43.png" alt="image-20211220173340125"></p><p>制作一些特殊卡牌需要用到<code>python</code> 批量操作，比如英语音标需要发音，批量下载音频：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">list = []</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'mp3list.txt'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    list = f.readlines()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> list:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">'mp3'</span>):</span><br><span class="line">        os.mkdir(<span class="string">'mp3'</span>)</span><br><span class="line">    request.urlretrieve(url, <span class="string">'mp3/'</span> + url[url.rindex(<span class="string">'/'</span>)+<span class="number">1</span>:].strip())</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是一篇整理思绪的文章。&lt;/p&gt;
    
    </summary>
    
    
      <category term="GTD" scheme="http://www.yilnz.com/tags/GTD/"/>
    
  </entry>
  
  <entry>
    <title>gitlabCI与jenkins的远程构建</title>
    <link href="http://www.yilnz.com/gitlabCI%E4%B8%8Ejenkins%E7%9A%84%E8%BF%9C%E7%A8%8B%E6%9E%84%E5%BB%BA/"/>
    <id>http://www.yilnz.com/gitlabCI与jenkins的远程构建/</id>
    <published>2021-12-16T11:29:58.000Z</published>
    <updated>2021-12-30T08:25:12.452Z</updated>
    
    <content type="html"><![CDATA[<p>jenkins提供了远程API，通常以 xxx/api/{schema}的方式来访问，比如 <code>http://localhost:8080/jenkins/job/test-job/api/json</code>。api的形式有三种 xml，json，python。gitlabCI是一种持续集成工具，可实现在某一分支提交代码执行相应shell命令，二者结合起来可实现提交代码就构建jenkins job。</p><a id="more"></a><p>jenkins官网有API的详细介绍：<a href="https://www.jenkins.io/doc/book/using/remote-access-api/" target="_blank" rel="noopener">https://www.jenkins.io/doc/book/using/remote-access-api/</a></p><p>以下列出常用的一些jenkins api</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080/jenkins/api/json  job列表</span><br><span class="line">http://localhost:8080/jenkins/job/&#123;jobname&#125;/api/json job的详细信息</span><br><span class="line">http://localhost:8080/jenkins/job/&#123;jobname&#125;/lastBuild/api/json job的最后构建信息</span><br><span class="line">http://localhost:8080/jenkins/crumbIssuer/api/json 获取crumb</span><br><span class="line">http://localhost:8080/jenkins/job/&#123;jobname&#125;/api/json?tree=json 获取job颜色</span><br><span class="line">http://localhost:8080/jenkins/job/&#123;jobname&#125;/buildWithParameters?&#123;param1&#125;=&#123;param1Result&#125;&amp;&#123;param2&#125;=&#123;param2Result&#125; 参数化构建job</span><br><span class="line">http://localhost:8080/jenkins/job/&#123;jobname&#125;/build 构建job</span><br><span class="line">http://localhost:8080/jenkins/job/&#123;jobname&#125;/buildHistory/ajax 构建过程html，用于查看当前job的构建进度（注意返回的是html）</span><br></pre></td></tr></table></figure><p>要实现提交代码就构建只需要<code>参数化构建job</code>或者<code>构建job</code>这样的jenkins API 与 gitlabCI 的结合，首先来实现jenkins的远程构建，由于jenkins有CSRF prevent protection 这样的保护机制，在调用 构建job，查看构建进度等接口时必须传递 crumb 和 jessionid 的cookie信息，所以需要在构建job之前调用获取crumb的接口 <code>crumbIssuer/api/json</code>，下面写了个脚本执行远程构建：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># buildme.sh    Runs a build Jenkins build job that requires a crumb</span></span><br><span class="line"><span class="comment"># e.g.</span></span><br><span class="line"><span class="comment"># $ ./buildme.sh 'builderdude:monkey123' 'awesomebuildjob' 'http://paton.example.com:8080'</span></span><br><span class="line"><span class="comment"># Replace with your admin credentials, build job name and Jenkins URL</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># More background:</span></span><br><span class="line"><span class="comment"># https://support.cloudbees.com/hc/en-us/articles/219257077-CSRF-Protection-Explained</span></span><br><span class="line">USERPASSWORD=<span class="variable">$1</span></span><br><span class="line">JOB=<span class="variable">$2</span></span><br><span class="line">SERVER=<span class="variable">$3</span></span><br><span class="line"><span class="comment"># File where web session cookie is saved</span></span><br><span class="line">COOKIEJAR=<span class="string">"<span class="variable">$(mktemp)</span>"</span></span><br><span class="line">CRUMB=$(curl -f -u <span class="string">"<span class="variable">$USERPASSWORD</span>"</span> --cookie-jar <span class="string">"<span class="variable">$COOKIEJAR</span>"</span> <span class="string">"<span class="variable">$SERVER</span>/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,%22:%22,//crumb)"</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$CRUMB</span></span><br><span class="line">status=$?</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$status</span> -eq 0 ]] ; <span class="keyword">then</span></span><br><span class="line">  curl -f -X POST -u <span class="string">"<span class="variable">$USERPASSWORD</span>"</span> --cookie <span class="string">"<span class="variable">$COOKIEJAR</span>"</span> -H <span class="string">"<span class="variable">$CRUMB</span>"</span> <span class="string">"<span class="variable">$SERVER</span>"</span>/job/<span class="string">"<span class="variable">$JOB</span>"</span>/buildWithParameters</span><br><span class="line">  status=$?</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">rm <span class="string">"<span class="variable">$COOKIEJAR</span>"</span></span><br><span class="line"><span class="built_in">exit</span> <span class="variable">$status</span></span><br></pre></td></tr></table></figure><p>GitLab CI/CD（后简称 GitLab CI）是一套基于 GitLab 的 CI/CD 系统，可以让开发人员通过 .gitlab-ci.yml 在项目中配置 CI/CD 流程，在提交后，系统可以自动/手动地执行任务，完成 CI/CD 操作。而且，它的配置非常简单，CI Runner 由 Go 语言编写，最终打包成单文件，所以只需要一个 Runner 程序、以及一个用于运行 jobs 的执行平台（如裸机+SSH，Docker 或 Kubernetes 等，我推荐用 Docker，因为搭建相当容易）即可运行一套完整的 CI/CD 系统。</p><p>GitLab 允许在项目中编写 <code>.gitlab-ci.yml</code> 文件，来配置 CI/CD 流程。</p><h3 id="Gitlab-Runner"><a href="#Gitlab-Runner" class="headerlink" title="Gitlab Runner"></a>Gitlab Runner</h3><hr><p>GitLab-Runner就是一个用来执行.gitlab-ci.yml 脚本的工具。可以理解成，Runner就像认真工作的工人，GitLab-CI就是管理工人的中心，所有工人都要在GitLab-CI里面注册，并且表明自己是为哪个项目服务。当相应的项目发生变化时，GitLab-CI就会通知相应的工人执行对应的脚本。</p><h4 id="Runner类型"><a href="#Runner类型" class="headerlink" title="Runner类型"></a>Runner类型</h4><p>GitLab-Runner可以分类两种类型：Shared Runner（共享型）和Specific Runner（指定型）。</p><ul><li>Shared Runner：所有工程都能够用的，且只有系统管理员能够创建。</li><li>Specific Runner：只有特定的项目可以使用。</li></ul><h4 id="Runner的安装"><a href="#Runner的安装" class="headerlink" title="Runner的安装"></a>Runner的安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># For Debian/Ubuntu </span></span><br><span class="line">curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-ci-multi-runner/script.deb.sh | sudo bash </span><br><span class="line"></span><br><span class="line"><span class="comment"># For RHEL/CentOS </span></span><br><span class="line">curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-ci-multi-runner/script.rpm.sh | sudo bash</span><br></pre></td></tr></table></figure><h4 id="获取Specific-Runner注册Token："><a href="#获取Specific-Runner注册Token：" class="headerlink" title="获取Specific Runner注册Token："></a>获取Specific Runner注册Token：</h4><p>进行项目仓库-&gt;settings-&gt;CI/CD界面</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS83LzI5LzE2YzNjZWVmZmFkYTc4NWI" alt=""></p><h4 id="在服务器上注册Runner"><a href="#在服务器上注册Runner" class="headerlink" title="在服务器上注册Runner"></a>在服务器上注册Runner</h4><p>期间会用到前期获取的url及token；注册完成之后，GitLab-CI就会多出一条Runner记录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ci-multi-runner register</span><br></pre></td></tr></table></figure><p>注册完成之后我需要在<strong>项目根目录</strong>编辑.gitlab-ci.yml</p><p>.gitlab-ci.yml:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">stages:</span><br><span class="line">  - buildTest</span><br><span class="line"></span><br><span class="line">job1:</span><br><span class="line">  stage: buildTest</span><br><span class="line">  only:</span><br><span class="line">    - release_test</span><br><span class="line">  script:</span><br><span class="line">    - <span class="built_in">echo</span> <span class="string">"start request jenkins test build...　"</span></span><br><span class="line">    - sh ~/buildme.sh <span class="string">'&#123;username&#125;:&#123;password&#125;'</span> <span class="string">'&#123;jenkins-job-name&#125;'</span> <span class="string">'&#123;jenkins-url&#125;'</span></span><br></pre></td></tr></table></figure><p>至此gitlabCI集成jenkins远程构建已完成，在我提交代码到releast_test分支的时候，jenkins就会立即构建项目。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;jenkins提供了远程API，通常以 xxx/api/{schema}的方式来访问，比如 &lt;code&gt;http://localhost:8080/jenkins/job/test-job/api/json&lt;/code&gt;。api的形式有三种 xml，json，python。gitlabCI是一种持续集成工具，可实现在某一分支提交代码执行相应shell命令，二者结合起来可实现提交代码就构建jenkins job。&lt;/p&gt;
    
    </summary>
    
    
      <category term="jenkins" scheme="http://www.yilnz.com/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>idea修复奇怪的报错</title>
    <link href="http://www.yilnz.com/idea%E4%BF%AE%E5%A4%8D%E5%A5%87%E6%80%AA%E7%9A%84%E6%8A%A5%E9%94%99/"/>
    <id>http://www.yilnz.com/idea修复奇怪的报错/</id>
    <published>2021-12-09T03:46:17.000Z</published>
    <updated>2021-12-30T08:25:12.452Z</updated>
    
    <content type="html"><![CDATA[<p>有时候会遇到idea出现莫名其妙的错，但是明明代码能正常运行。</p><p>直接重新导入项目一遍来解决奇怪的报错，如何手动操作：首先点close项目，然后需要删除.idea文件夹和所有的*.iml文件，然后重新打开项目，不过写了个脚本删除这些文件更方便。</p><a id="more"></a><p>下面是如何重新引入项目：</p><p>第一步File-&gt;Close Project, 第二步运行Windows Subsystem for Linux,   切换到当前项目目录，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf .idea</span><br></pre></td></tr></table></figure><p>第三步，执行 (<strong>rmiml</strong>)脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -iname <span class="string">'*.iml'</span> -<span class="built_in">exec</span> rm &#123;&#125; \;</span><br></pre></td></tr></table></figure><p>第四步，<strong>重启idea</strong>，这一步很重要，少了这一步就有可能还是报错。</p><p>第五步，重新打开项目。</p><p>有时候重新打开项目会被maven自动Ignore， 需要在设置里面 <strong>Build, Execution,Deployment -&gt; build Tools -&gt; Maven -&gt; Ignored Files</strong> 把忽略掉的项目的√去掉 项目就回来了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有时候会遇到idea出现莫名其妙的错，但是明明代码能正常运行。&lt;/p&gt;
&lt;p&gt;直接重新导入项目一遍来解决奇怪的报错，如何手动操作：首先点close项目，然后需要删除.idea文件夹和所有的*.iml文件，然后重新打开项目，不过写了个脚本删除这些文件更方便。&lt;/p&gt;
    
    </summary>
    
    
      <category term="idea" scheme="http://www.yilnz.com/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>尝试使用typora写一个markdown笔记</title>
    <link href="http://www.yilnz.com/%E5%B0%9D%E8%AF%95%E4%BD%BF%E7%94%A8typora%E5%86%99%E4%B8%80%E4%B8%AAmarkdown%E7%AC%94%E8%AE%B0/"/>
    <id>http://www.yilnz.com/尝试使用typora写一个markdown笔记/</id>
    <published>2021-12-09T01:52:29.000Z</published>
    <updated>2021-12-30T08:25:12.452Z</updated>
    
    <content type="html"><![CDATA[<p>Typora作为Markdown编辑器，其实比其他同行强太多，实时渲染、多主题、格式转换等等各方面。Typora最近终于从beta版更新到稳定版1.0.x了，不过，稳定版的Typora也干起了坐地收费的事情了。<br><a id="more"></a></p><p>本来一直都在用有道云笔记，但是由于最近的新闻，让我对写markdown保存到本地的博客又感兴趣了。不久前才开通了一年的Office全家桶，让我有了Onedrive 1T的空间，刚好用来同步我的笔记。</p><p>本篇文章是使用typora编写的，由于还未升级还可以暂时用用，以前是用hexoeditor，目前感觉最大的区别就typora并不是使用mk源代码来写文章。</p><p>第一次用typora，图床也不太会用，hexoeditor有一键上传图床，如果typora没有这个功能也没关系，也有其他的办法替代，比如使用utools的图床工具，把自己的图像上传到gitee。</p><p><strong>更新</strong>:</p><p>typora 居然貌似支持hexo，保存时标题默认就读取了 meta信息中 的title。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Typora作为Markdown编辑器，其实比其他同行强太多，实时渲染、多主题、格式转换等等各方面。Typora最近终于从beta版更新到稳定版1.0.x了，不过，稳定版的Typora也干起了坐地收费的事情了。&lt;br&gt;
    
    </summary>
    
    
      <category term="软件" scheme="http://www.yilnz.com/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>使用moonlight搭建公网云游戏</title>
    <link href="http://www.yilnz.com/%E4%BD%BF%E7%94%A8moonlight%E6%90%AD%E5%BB%BA%E5%85%AC%E7%BD%91%E4%BA%91%E6%B8%B8%E6%88%8F/"/>
    <id>http://www.yilnz.com/使用moonlight搭建公网云游戏/</id>
    <published>2021-08-10T08:52:06.000Z</published>
    <updated>2021-12-30T08:25:12.456Z</updated>
    
    <content type="html"><![CDATA[<p>记录一下使用moonlight搭建公网云游戏的一些坑<br><a id="more"></a><br>我知道游戏的主要串流工具有几种<strong>steamlink</strong>,<strong>moonlight</strong>,<strong>parsec</strong>，分别说下优缺点：</p><ol><li><code>steamlink</code> 优点：简单 缺点：只能串流steam的游戏.</li><li><code>parsec</code> 优点：可以玩所有游戏，据说是P2P打洞原理，不需要有公网IP 缺点：要登录注册，麻烦</li><li><code>moonlight</code> 优点：开源，安全 缺点：配置麻烦，需要公网IP，只有N卡能用</li></ol><p>我选择了第3种，moonlight。官网地址为<a href="https://moonlight-stream.org/" target="_blank" rel="noopener">https://moonlight-stream.org/</a> ，其实现原理为实现了Nvidia Shield的串流协议，官方原话：</p><blockquote><p>Moonlight (formerly Limelight) is an open source implementation of NVIDIA’s GameStream protocol. We implemented the protocol used by the NVIDIA Shield and wrote a set of 3rd party clients.</p></blockquote><p>搭建moonlight的大致步骤就是</p><ol><li>在受控电脑安装Nvida Experience，打开设置-shield，小绿开关打开</li><li>主控电脑安装moonlight客户端</li><li>主控电脑使用moonlight连接受控电脑</li><li>主控电脑使用moonlight无法连接到受控电脑，受控电脑下载<code>internet hosting tool</code>（moonlight官网host downloads下载）进行检测问题</li><li>还是不行，添加端口映射端口<br> TCP 47984, 47989, 48010<br> UDP 5353, 47998, 47999, 48000, 48002, 48010</li></ol><h4 id="打开Nvidia-Sheild和使用moonlight遇到的问题"><a href="#打开Nvidia-Sheild和使用moonlight遇到的问题" class="headerlink" title="打开Nvidia Sheild和使用moonlight遇到的问题"></a>打开Nvidia Sheild和使用moonlight遇到的问题</h4><ol><li><p>在Nvidia Experience 中的设置 - Sheild中显示为空的解决办法：</p><p>关闭Windows RDP 远程桌面，使用其他远程桌面工具，如Chrome Remote Desktop, VNC(我使用的是TightVNC),TeamViewer（这个我没成功)等等。为什么要关闭mstsc，因为windows连接这个就会自动锁屏。</p></li><li><p>多屏幕连接，导致moonlight连接到副屏去了，无法正常玩游戏的解决办法：</p><p>搜索运行，使用 DisplaySwitch.exe /internal 命令关闭副屏</p></li><li><p>moonlight中没有我想玩的游戏：<br> 在sheild中添加一个自定义路径的游戏，添加以下python脚本，用moonlight去打开这个脚本：<br>sleepforever.py:</p></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    print(<span class="string">'sleeping...'</span>)</span><br><span class="line">    time.sleep(<span class="number">60</span>)</span><br></pre></td></tr></table></figure><p> sleepforever.bat</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sleepforever.py</span><br></pre></td></tr></table></figure><p>经过一波三折之后，终于可以用moonlight玩云游戏了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录一下使用moonlight搭建公网云游戏的一些坑&lt;br&gt;
    
    </summary>
    
    
      <category term="moonlight" scheme="http://www.yilnz.com/tags/moonlight/"/>
    
  </entry>
  
  <entry>
    <title>如何上传jar包到maven中心仓库</title>
    <link href="http://www.yilnz.com/%E5%A6%82%E4%BD%95%E4%B8%8A%E4%BC%A0jar%E5%8C%85%E5%88%B0maven%E4%B8%AD%E5%BF%83%E4%BB%93%E5%BA%93/"/>
    <id>http://www.yilnz.com/如何上传jar包到maven中心仓库/</id>
    <published>2019-10-24T02:24:56.000Z</published>
    <updated>2021-12-30T08:25:12.456Z</updated>
    
    <content type="html"><![CDATA[<p>如何上传jar包到maven中心仓库<br><a id="more"></a><br>1.<br>pom 里添加：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.sonatype.oss<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>oss-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">licenses</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">license</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>The Apache Software License, Version 2.0<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.apache.org/licenses/LICENSE-2.0.txt<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">distribution</span>&gt;</span>repo<span class="tag">&lt;/<span class="name">distribution</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">license</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">licenses</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">scm</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">connection</span>&gt;</span>scm:git:git://github.com/me10zyl/surfing.git<span class="tag">&lt;/<span class="name">connection</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">developerConnection</span>&gt;</span>scm:git:git@github.com:me10zyl/surfing.git<span class="tag">&lt;/<span class="name">developerConnection</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://github.com/me10zyl/surfing<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">scm</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">developers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">developer</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>yilnz<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">email</span>&gt;</span>me10zyl@qq.com<span class="tag">&lt;/<span class="name">email</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://www.yilnz.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">developer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">developers</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>local<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">distributionManagement</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>releases<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">name</span>&gt;</span>Releases<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://192.168.4.13:8081/nexus/content/repositories/releases<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">distributionManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>sonatype-oss-release<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.sonatype.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>nexus-staging-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">extensions</span>&gt;</span>true<span class="tag">&lt;/<span class="name">extensions</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">serverId</span>&gt;</span>sonatype-nexus-staging<span class="tag">&lt;/<span class="name">serverId</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">nexusUrl</span>&gt;</span>https://oss.sonatype.org/<span class="tag">&lt;/<span class="name">nexusUrl</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">autoReleaseAfterClose</span>&gt;</span>true<span class="tag">&lt;/<span class="name">autoReleaseAfterClose</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br></pre></td></tr></table></figure><p>添加完成后<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export GPG_TTY=$(tty)</span><br><span class="line">proxychains4 mvn deploy -DskipTests -P sonatype-oss-release</span><br></pre></td></tr></table></figure></p><p>2.创建JIRA ISSUE 请求添加repo。<a href="https://issues.sonatype.org/browse/OSSRH-51503" target="_blank" rel="noopener">https://issues.sonatype.org/browse/OSSRH-51503</a></p><p>3.<a href="https://oss.sonatype.org/#stagingRepositories" target="_blank" rel="noopener">https://oss.sonatype.org/#stagingRepositories </a>close repo and release repo</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如何上传jar包到maven中心仓库&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>javafx 与 fxml</title>
    <link href="http://www.yilnz.com/javafx-%E4%B8%8E-fxml/"/>
    <id>http://www.yilnz.com/javafx-与-fxml/</id>
    <published>2019-10-24T02:19:20.000Z</published>
    <updated>2021-12-30T08:25:12.456Z</updated>
    
    <content type="html"><![CDATA[<p>javafx 使用 fxml 的一个例子。<br><a id="more"></a><br>main:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GUIMain</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">(Stage stage)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">// Create the FXMLLoader</span></span><br><span class="line">FXMLLoader loader = <span class="keyword">new</span> FXMLLoader();</span><br><span class="line"><span class="comment">// Path to the FXML File</span></span><br><span class="line">String fxmlDocPath = <span class="string">"main.fxml"</span>;</span><br><span class="line"><span class="comment">//FileInputStream fxmlStream = new FileInputStream(fxmlDocPath);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Create the Pane and all Details</span></span><br><span class="line"><span class="keyword">final</span> ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();</span><br><span class="line">Pane root = (Pane) loader.load(contextClassLoader.getResourceAsStream(fxmlDocPath));</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create the Scene</span></span><br><span class="line">Scene scene = <span class="keyword">new</span> Scene(root);</span><br><span class="line"><span class="comment">// Set the Scene to the Stage</span></span><br><span class="line">stage.setScene(scene);</span><br><span class="line"><span class="comment">// Set the Title to the Stage</span></span><br><span class="line">stage.setTitle(<span class="string">"音频剪切工具"</span>);</span><br><span class="line"><span class="comment">// Display the Stage</span></span><br><span class="line">stage.show();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">stage.setOnCloseRequest(e-&gt;&#123;</span><br><span class="line">GUIController guiController = loader.getController();</span><br><span class="line"><span class="keyword">final</span> Map&lt;String, String&gt; storeValues = guiController.getStoreValues();</span><br><span class="line">Properties p = <span class="keyword">new</span> Properties();</span><br><span class="line">p.putAll(storeValues);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">p.store(<span class="keyword">new</span> OutputStreamWriter(<span class="keyword">new</span> FileOutputStream(<span class="string">"audiocutter.properties"</span>),StandardCharsets.UTF_8), <span class="string">"音频剪切工具配置文件"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e1) &#123;</span><br><span class="line">e1.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>controller:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GUIController</span> <span class="keyword">implements</span> <span class="title">Initializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    ChoiceBox&lt;String&gt; choice1;</span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    TextField input1;</span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    TextField input2;</span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    TextField input3;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, String&gt; <span class="title">getStoreValues</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">final</span> HashMap&lt;String, String&gt; str = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        String cutDirection = choice1.getValue();</span><br><span class="line">        String inputDir = input1.getText();</span><br><span class="line">        String outDir = input2.getText();</span><br><span class="line">        String sec = input3.getText();</span><br><span class="line">        str.put(<span class="string">"inputDir"</span>, inputDir);</span><br><span class="line">        str.put(<span class="string">"outDir"</span>, outDir);</span><br><span class="line">        str.put(<span class="string">"cutDirection"</span>, cutDirection);</span><br><span class="line">        str.put(<span class="string">"sec"</span>, sec);</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startProcess</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String cutDirection = (String) choice1.getValue();</span><br><span class="line">            String inputDir = input1.getText();</span><br><span class="line">            String outDir = input2.getText();</span><br><span class="line">            String sec = input3.getText();</span><br><span class="line">            <span class="keyword">if</span> (!(inputDir != <span class="keyword">null</span> &amp;&amp; !inputDir.equals(<span class="string">""</span>) &amp;&amp; outDir != <span class="keyword">null</span> &amp;&amp; !outDir.equals(<span class="string">""</span>) &amp;&amp; sec != <span class="keyword">null</span> &amp;&amp; !sec.equals(<span class="string">""</span>))) &#123;</span><br><span class="line">                Alert alert = <span class="keyword">new</span> Alert(Alert.AlertType.WARNING, <span class="string">"请填写所有输入框"</span>, ButtonType.YES);</span><br><span class="line">                alert.showAndWait();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (cutDirection.equals(<span class="string">"剪切前面"</span>)) &#123;</span><br><span class="line">                sec = <span class="string">"-"</span> + sec;</span><br><span class="line">            &#125;</span><br><span class="line">            AudioCutter.cutAudio(inputDir, outDir, Float.parseFloat(sec));</span><br><span class="line">            Alert alert = <span class="keyword">new</span> Alert(Alert.AlertType.INFORMATION, <span class="string">"处理完毕"</span>, ButtonType.YES);</span><br><span class="line">            alert.showAndWait();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            Alert alert = <span class="keyword">new</span> Alert(Alert.AlertType.ERROR, <span class="string">"出错："</span> + e.getMessage(), ButtonType.YES);</span><br><span class="line">            alert.showAndWait();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">browseInput</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">final</span> File file = showBrowseDir();</span><br><span class="line">        <span class="keyword">if</span>(file != <span class="keyword">null</span>)&#123;</span><br><span class="line">            input1.setText(file.getPath());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">browseOutput</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">final</span> File file = showBrowseDir();</span><br><span class="line">        <span class="keyword">if</span>(file != <span class="keyword">null</span>)&#123;</span><br><span class="line">            input2.setText(file.getPath());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> File <span class="title">showBrowseDir</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DirectoryChooser dirChooser = <span class="keyword">new</span> DirectoryChooser();</span><br><span class="line">        dirChooser.setTitle(<span class="string">"选择文件夹"</span>);</span><br><span class="line">        <span class="keyword">final</span> File file = dirChooser.showDialog(<span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">return</span> file;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initialize</span><span class="params">(URL location, ResourceBundle resources)</span> </span>&#123;</span><br><span class="line">        choice1.setItems(FXCollections.observableArrayList(<span class="string">"剪切前面"</span>, <span class="string">"剪切后面"</span>));</span><br><span class="line">        choice1.setValue(<span class="string">"剪切后面"</span>);</span><br><span class="line"></span><br><span class="line">        Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            properties.load(<span class="keyword">new</span> FileInputStream(<span class="string">"audiocutter.properties"</span>));</span><br><span class="line">            input1.setText(properties.getProperty(<span class="string">"inputDir"</span>));</span><br><span class="line">            input2.setText(properties.getProperty(<span class="string">"outDir"</span>));</span><br><span class="line">            input3.setText(properties.getProperty(<span class="string">"sec"</span>));</span><br><span class="line">            choice1.setValue(properties.getProperty(<span class="string">"cutDirection"</span>));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>fxml:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"></span><br><span class="line">&lt;?import java.lang.*?&gt;</span><br><span class="line">&lt;?import javafx.scene.control.*?&gt;</span><br><span class="line">&lt;?import javafx.scene.layout.*?&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Pane</span> <span class="attr">maxHeight</span>=<span class="string">"-Infinity"</span> <span class="attr">maxWidth</span>=<span class="string">"-Infinity"</span> <span class="attr">minHeight</span>=<span class="string">"-Infinity"</span> <span class="attr">minWidth</span>=<span class="string">"-Infinity"</span> <span class="attr">prefHeight</span>=<span class="string">"315.0"</span> <span class="attr">prefWidth</span>=<span class="string">"496.0"</span> <span class="attr">xmlns</span>=<span class="string">"http://javafx.com/javafx/8"</span> <span class="attr">xmlns:fx</span>=<span class="string">"http://javafx.com/fxml/1"</span> <span class="attr">fx:controller</span>=<span class="string">"com.yilnz.audiocutter.gui.GUIController"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">children</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">TextField</span> <span class="attr">fx:id</span>=<span class="string">"input1"</span> <span class="attr">layoutX</span>=<span class="string">"165.0"</span> <span class="attr">layoutY</span>=<span class="string">"63.0"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">TextField</span> <span class="attr">fx:id</span>=<span class="string">"input2"</span> <span class="attr">layoutX</span>=<span class="string">"165.0"</span> <span class="attr">layoutY</span>=<span class="string">"110.0"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ChoiceBox</span> <span class="attr">fx:id</span>=<span class="string">"choice1"</span> <span class="attr">layoutX</span>=<span class="string">"107.0"</span> <span class="attr">layoutY</span>=<span class="string">"154.0"</span> <span class="attr">prefHeight</span>=<span class="string">"27.0"</span> <span class="attr">prefWidth</span>=<span class="string">"118.0"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Label</span> <span class="attr">layoutX</span>=<span class="string">"100.0"</span> <span class="attr">layoutY</span>=<span class="string">"68.0"</span> <span class="attr">text</span>=<span class="string">"输入路径"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Label</span> <span class="attr">layoutX</span>=<span class="string">"100.0"</span> <span class="attr">layoutY</span>=<span class="string">"115.0"</span> <span class="attr">text</span>=<span class="string">"输出路径"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">layoutX</span>=<span class="string">"190.0"</span> <span class="attr">layoutY</span>=<span class="string">"204.0"</span> <span class="attr">mnemonicParsing</span>=<span class="string">"false"</span> <span class="attr">onAction</span>=<span class="string">"#startProcess"</span> <span class="attr">prefHeight</span>=<span class="string">"27.0"</span> <span class="attr">prefWidth</span>=<span class="string">"118.0"</span> <span class="attr">text</span>=<span class="string">"开始处理"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">TextField</span> <span class="attr">fx:id</span>=<span class="string">"input3"</span> <span class="attr">layoutX</span>=<span class="string">"233.0"</span> <span class="attr">layoutY</span>=<span class="string">"154.0"</span> <span class="attr">prefHeight</span>=<span class="string">"27.0"</span> <span class="attr">prefWidth</span>=<span class="string">"76.0"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Label</span> <span class="attr">layoutX</span>=<span class="string">"319.0"</span> <span class="attr">layoutY</span>=<span class="string">"159.0"</span> <span class="attr">text</span>=<span class="string">"秒"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">layoutX</span>=<span class="string">"346.0"</span> <span class="attr">layoutY</span>=<span class="string">"63.0"</span> <span class="attr">mnemonicParsing</span>=<span class="string">"false"</span> <span class="attr">onAction</span>=<span class="string">"#browseInput"</span> <span class="attr">text</span>=<span class="string">"浏览..."</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">layoutX</span>=<span class="string">"346.0"</span> <span class="attr">layoutY</span>=<span class="string">"110.0"</span> <span class="attr">mnemonicParsing</span>=<span class="string">"false"</span> <span class="attr">onAction</span>=<span class="string">"#browseOutput"</span> <span class="attr">text</span>=<span class="string">"浏览..."</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">children</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Pane</span>&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;javafx 使用 fxml 的一个例子。&lt;br&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://www.yilnz.com/tags/java/"/>
    
      <category term="javafx" scheme="http://www.yilnz.com/tags/javafx/"/>
    
  </entry>
  
  <entry>
    <title>Java Feature 和 JS Promise</title>
    <link href="http://www.yilnz.com/Java-Feature-%E5%92%8C-JS-Promise/"/>
    <id>http://www.yilnz.com/Java-Feature-和-JS-Promise/</id>
    <published>2019-09-18T05:47:34.000Z</published>
    <updated>2021-12-30T08:25:12.456Z</updated>
    
    <content type="html"><![CDATA[<p>Java Feature 和 JS Promise之间的关系，<code>CompletableFuture</code>相当于JS中的Promise，而<code>Futrue</code>中的get方法相当于JS中Promise的await关键字。<br><a id="more"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> CompletableFuture&lt;String&gt; future1 = CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class="line">          <span class="keyword">try</span> &#123;</span><br><span class="line">              Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">          &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">              e.printStackTrace();</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> <span class="string">"1"</span>;</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">final</span> ExecutorService executorService = Executors.newCachedThreadPool();</span><br><span class="line">      <span class="keyword">final</span> Future&lt;String&gt; feture = executorService.submit(() -&gt; &#123;</span><br><span class="line">          <span class="keyword">try</span> &#123;</span><br><span class="line">              Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">          &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">              e.printStackTrace();</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> <span class="string">"1"</span>;</span><br><span class="line">      &#125;);</span><br><span class="line">      future1.thenAccept(System.out::println);</span><br><span class="line"></span><br><span class="line">      System.out.println(feture.get());</span><br><span class="line"></span><br><span class="line">      future1.join();</span><br><span class="line">      executorService.shutdown();</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">rs, rj</span>) =&gt;</span> &#123;</span><br><span class="line">       setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>rs(<span class="number">1</span>), <span class="number">1000</span>)</span><br><span class="line">   &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">       <span class="built_in">console</span>.log(res)</span><br><span class="line">   &#125;)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">doWork</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">       <span class="built_in">console</span>.log(<span class="keyword">await</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">rs, rj</span>) =&gt;</span> setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>rs(<span class="number">1</span>), <span class="number">1000</span>)))</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   doWork()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Java Feature 和 JS Promise之间的关系，&lt;code&gt;CompletableFuture&lt;/code&gt;相当于JS中的Promise，而&lt;code&gt;Futrue&lt;/code&gt;中的get方法相当于JS中Promise的await关键字。&lt;br&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://www.yilnz.com/tags/java/"/>
    
      <category term="javascript" scheme="http://www.yilnz.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>java.util.concurrent - Java并发工具集</title>
    <link href="http://www.yilnz.com/java-util-concurrent-Java%E5%B9%B6%E5%8F%91%E5%B7%A5%E5%85%B7%E9%9B%86/"/>
    <id>http://www.yilnz.com/java-util-concurrent-Java并发工具集/</id>
    <published>2019-09-03T02:07:39.000Z</published>
    <updated>2021-12-30T08:25:12.456Z</updated>
    
    <content type="html"><![CDATA[<p>   Java 5 添加了一个新的Java包， <code>java.util.concurrent</code> 包。这个包有一系列的类使开发并发（多线程）程序更简单。在这个包添加之前，你只能自己编写工具类。</p><a id="more"></a><p>在这个教程中我会带你浏览一遍 <code>java.util.concurrent</code> 类，一个一个的介绍，所以你可以学习怎样使用他们。我会使用Java 6的版本。我不确定对于Java 5有什么不同。<br>我不会解释Java并发核心问题 - 也就是背后的理论。如果你感兴趣，看看我另一个教程 - <code>Java Concurrency tutorial</code>。</p><h1 id="BlockingQueue"><a href="#BlockingQueue" class="headerlink" title="BlockingQueue"></a>BlockingQueue</h1><blockquote><ul><li>BlockingQueue的使用</li><li>BlockingQueue的实现</li><li>Java BlockingQueue的例子</li></ul></blockquote><p> <code>java.util.concurrency</code> 包中的Java <code>BlockingQueue</code>代表了一个线程安全队列，用于放入和拿出。接下来会演示如何使用 <code>BlockingQueue</code>。<br> 这个教程不会讨论如何自己实现<code>BlockQueue</code>。如果你感兴趣，我有一个<code>Blocking Queues</code>的理论教程<code>Java Concurrency Tutorial</code>。</p><h3 id="BlockQueue的使用"><a href="#BlockQueue的使用" class="headerlink" title="BlockQueue的使用"></a>BlockQueue的使用</h3><p> 一个<code>BlockingQueue</code>典型的用法是一个线程去生产objects，另一个线程去消费。这里有一个图阐述了这个理论：<br> <img src="/images/java.util.concurrent---Java并发工具集/20190903102554619.png" alt=""><br>    <strong>一个线程放入BlockingQueue，另一个线程拿出</strong></p><p>这个生产线程会持续的产生新的objects并插入队列中，直到队列到达上界。这个限制，换句话说。如果这个<code>blocking queue</code>到达了他的上界，这个生产线程在插入新的object时就会被阻塞。它会一直被阻塞直到消费线程从这个队列中拿走object。</p><pre><code>#### BlockingQueue的方法</code></pre><p>一个<code>BlockingQueue</code>，对于插入，移除和检验元素是否在队列中，都有4个不同的行为。如果请求的操作不能立即执行，每个行为表现也不同。这是一个方法表：</p><table><thead><tr><th></th><th>Throws Exception</th><th>Special Value</th><th>Blocks</th><th>Times Out</th></tr></thead><tbody><tr><td>Insert</td><td>add(o)</td><td>offer(o)</td><td>put(o)</td><td>offer(o, timeout,timeunit)</td></tr><tr><td>Remove</td><td>remove(o)</td><td>poll()</td><td>take()</td><td>poll(timeout,timeunit)</td></tr><tr><td>Examine</td><td>element()</td><td>peek()</td><td></td></tr></tbody></table><p>4个不同行为的意思是：</p><ol><li><strong>Throw Exceptions</strong>:<br> 如果请求的操作不能立即执行，一个异常抛出</li><li><strong>Special Value</strong>：<br> 如果请求的操作不能立即执行，一个特殊的值被返回（通常是 true/false)</li><li><strong>Blocks</strong>:<br> 如果请求的操作不能立即执行，一个方法会被阻塞。</li><li><strong>Times Out</strong>：<br> 如果请求的操作不能立即执行，一个方法会被阻塞，但是等到给出的超时时间就不再等待。返回了一个特殊的值表明是成功还是失败（经常是true/false)</li></ol><p>在<code>BlockingQueue</code>中不能插入null。如果你插入null，<code>BlockingQueue</code>会抛出 <code>NullPointerException</code>。</p><h3 id="BlockingQueue的实现"><a href="#BlockingQueue的实现" class="headerlink" title="BlockingQueue的实现"></a>BlockingQueue的实现</h3><p>因为<code>BlockingQueue</code>是一个接口，你至少使用其中一个实现来使用它。<code>BlockQueue</code>在<code>java.util.concrrent</code>包中有以下实现（Java 6）：</p><ul><li>ArrayBlockingQueue</li><li>DelayQueue</li><li>LinkedBlockingQueue</li><li>PriorityBlockingQueue</li><li>SynchronousQueue</li></ul><h3 id="Java-BlockingQueue的例子"><a href="#Java-BlockingQueue的例子" class="headerlink" title="Java BlockingQueue的例子"></a>Java BlockingQueue的例子</h3><p>这是一个Java<code>BlockingQueue</code>例子。这个例子使用了<code>BlockingQueue</code>的实现 - <code>ArrayBlockingQueue</code>。</p><p>第一步，<code>BlockingQueueExample</code>类在分别的线程中开启了一个<code>Producer</code>和一个<code>Consumer</code>。<code>Producer</code>在共享的<code>BlockingQueue</code>中插入一些字符串，<code>Consumer</code>从中拿出。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlockingQueueExample</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        BlockingQueue queue = <span class="keyword">new</span> ArrayBlockingQueue(<span class="number">1024</span>);</span><br><span class="line"></span><br><span class="line">        Producer producer = <span class="keyword">new</span> Producer(queue);</span><br><span class="line">        Consumer consumer = <span class="keyword">new</span> Consumer(queue);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread(producer).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(consumer).start();</span><br><span class="line"></span><br><span class="line">        Thread.sleep(<span class="number">4000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是一个<code>Producer</code>类。注意它在每次调用<code>put()</code>时睡眠了一秒钟。这会导致<code>Consumer</code>阻塞，一直等待队列中有东西。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Producer</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> BlockingQueue queue = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Producer</span><span class="params">(BlockingQueue queue)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.queue = queue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            queue.put(<span class="string">"1"</span>);</span><br><span class="line">            Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            queue.put(<span class="string">"2"</span>);</span><br><span class="line">            Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            queue.put(<span class="string">"3"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是一个<code>Consumer</code>类，他会从队列中拿取东西，然后打印到<code>System.out</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Consumer</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> BlockingQueue queue = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Consumer</span><span class="params">(BlockingQueue queue)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.queue = queue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(queue.take());</span><br><span class="line">            System.out.println(queue.take());</span><br><span class="line">            System.out.println(queue.take());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="ArrayBlockingQueue"><a href="#ArrayBlockingQueue" class="headerlink" title="ArrayBlockingQueue"></a>ArrayBlockingQueue</h1><p><code>ArrayBlockingQueue</code>类实现了<code>BlockingQueue</code>接口。阅读<code>BlockingQueue</code>教程获取这个接口的更多信息。</p><p><code>ArrayBlockingQueue</code>是一个有边界，内部存储形式为一个数组的阻塞队列。有边界意思是不能存储无限量的元素。在同一实际存储元素有上界。你可以在实例化的时候设置这个上界，之后就不能改变了。</p><p><code>ArrayBlockingQueue</code>内部存储元素为FIFO（先进先出）顺序。队列的头部元素是最先插入的元素，队列的尾部是最后插入的元素。</p><p>这里展示了如何实例化和使用<code>ArrayBlockingQueue</code>:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">BlockingQueue queue = <span class="keyword">new</span> ArrayBlockingQueue(<span class="number">1024</span>);</span><br><span class="line"></span><br><span class="line">queue.put(<span class="string">"1"</span>);</span><br><span class="line"></span><br><span class="line">Object object = queue.take();</span><br></pre></td></tr></table></figure><p><code>BlockingQueue</code>例子使用了Java泛型。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">BlockingQueue&lt;String&gt; queue = <span class="keyword">new</span> ArrayBlockingQueue&lt;String&gt;(<span class="number">1024</span>);</span><br><span class="line"></span><br><span class="line">queue.put(<span class="string">"1"</span>);</span><br><span class="line"></span><br><span class="line">String string = queue.take();</span><br></pre></td></tr></table></figure><h1 id="DelayQueue"><a href="#DelayQueue" class="headerlink" title="DelayQueue"></a>DelayQueue</h1><p><code>DelayQueue</code>类实现了<code>BlockingQueue</code>接口。阅读<code>BlockingQueue</code>获取这个接口的更多信息。</p><p><code>DelayQueue</code>在内部阻塞元素直到一个特定的延时过期。元素必须实现<code>java.util.concurrent.Delayed</code>接口。这是接口的样子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Delayed</span> <span class="keyword">extends</span> <span class="title">Comparable</span>&lt;<span class="title">Delayed</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getDelay</span><span class="params">(TimeUnit timeUnit)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>getDelay()</code>方法返回值在被释放之前应该会被延迟保留，如果返回0或负数，延迟就已过期了，元素会在下一次在<code>DelayQueue</code>调用<code>take()</code> etc. 被释放。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;   Java 5 添加了一个新的Java包， &lt;code&gt;java.util.concurrent&lt;/code&gt; 包。这个包有一系列的类使开发并发（多线程）程序更简单。在这个包添加之前，你只能自己编写工具类。&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://www.yilnz.com/tags/java/"/>
    
      <category term="concurrency" scheme="http://www.yilnz.com/tags/concurrency/"/>
    
  </entry>
  
  <entry>
    <title>MacOSX APP 清单</title>
    <link href="http://www.yilnz.com/MacOSX-APP-%E6%B8%85%E5%8D%95/"/>
    <id>http://www.yilnz.com/MacOSX-APP-清单/</id>
    <published>2019-05-24T01:52:25.000Z</published>
    <updated>2021-12-30T08:25:12.456Z</updated>
    
    <content type="html"><![CDATA[<p>现在正在用的APP清单：<br>更新日期:</p><p><date>2019年10月24日 星期四 10时39分58秒 CST</date><br><a id="more"></a></p><p>本列表由ls_app_md脚本生成：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">cd ~/blog</span><br><span class="line"><span class="meta">$</span><span class="bash">(ls /Applications | grep -v <span class="string">'^\.'</span> | sed -n <span class="string">'s/\(.*\).app$/+ \1/p;'</span> &gt; app.list)</span></span><br><span class="line">sed -i "" "s/&lt;date&gt;.*&lt;\/date&gt;/&lt;date&gt;`date`&lt;\/date&gt;/;/^\+.*/d;/^list:/r app.list" source/_posts/MacOSX-APP-清单.md</span><br></pre></td></tr></table></figure></p><p>list:</p><ul><li>Alfred 3</li><li>Aliwangwang</li><li>Anki</li><li>App Store</li><li>Automator</li><li>BaiduNetdisk_mac</li><li>Be Focused</li><li>Beyond Compare</li><li>Calculator</li><li>Calendar</li><li>Charles</li><li>Chess</li><li>CleanMyMac 3</li><li>Contacts</li><li>DVD Player</li><li>Dash</li><li>Dashboard</li><li>DataGrip</li><li>Dictionary</li><li>Eudic</li><li>FWMSO2016VL</li><li>FaceTime</li><li>Flotato</li><li>Flux</li><li>Font Book</li><li>GSP5</li><li>GeoGebra Geometry</li><li>Go2Shell</li><li>GoodSync</li><li>Google Chrome</li><li>GsExplorer</li><li>HexoEditor</li><li>Image Capture</li><li>IntelliJ IDEA</li><li>JD-GUI</li><li>JavaFX Scene Builder 2.0</li><li>KeePassXC</li><li>Kext Utility</li><li>Kext Wizard</li><li>LICEcap</li><li>Launchpad</li><li>Lepton</li><li>Listen1</li><li>Mail</li><li>Maipo</li><li>Maps</li><li>Messages</li><li>Microsoft Excel</li><li>Microsoft Remote Desktop</li><li>Microsoft Word</li><li>Mission Control</li><li>Moom</li><li>Mos</li><li>MySQLWorkbench</li><li>Navicat Premium</li><li>NeteaseMusic</li><li>Noizio</li><li>Notes</li><li>Nutstore</li><li>OmniFocus</li><li>OmniGraffle</li><li>OneDrive</li><li>OpenBoard</li><li>OpenWebMonitor3</li><li>Paste</li><li>Pennywise</li><li>Photo Booth</li><li>Photos</li><li>Pomotodo</li><li>Pomy</li><li>Preview</li><li>Proxyee</li><li>QQ</li><li>QQLive</li><li>QuickTime Player</li><li>Quiver</li><li>Reflector 3</li><li>Reminders</li><li>Safari</li><li>Script Debugger</li><li>SecureCRT</li><li>ShadowsocksX-NG-R8</li><li>Siri</li><li>Sketch</li><li>SnippetsLab</li><li>Steam</li><li>Stickies</li><li>System Preferences</li><li>TeaCode</li><li>Telegram</li><li>TextEdit</li><li>TextExpander</li><li>Thunder</li><li>Time Machine</li><li>TweetDeck</li><li>VMware Fusion</li><li>Visual Studio Code</li><li>WeChat</li><li>Wireshark</li><li>Workspaces</li><li>Xcode</li><li>Yoink</li><li>YoudaoNote</li><li>iBooks</li><li>iStat Menus</li><li>iTerm</li><li>iTunes</li><li>iZip Unarchiver</li><li>irreader</li><li>labelme</li><li>oss-browser</li><li>rdm</li><li>thief-book</li><li>wechatwebdevtools</li><li>爱奇艺</li><li>企业微信</li><li>网易有道词典</li><li>小程序开发者工具</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;现在正在用的APP清单：&lt;br&gt;更新日期:&lt;/p&gt;
&lt;p&gt;&lt;date&gt;2019年10月24日 星期四 10时39分58秒 CST&lt;/date&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="mac" scheme="http://www.yilnz.com/tags/mac/"/>
    
      <category term="app" scheme="http://www.yilnz.com/tags/app/"/>
    
  </entry>
  
  <entry>
    <title>Linux 命令收集</title>
    <link href="http://www.yilnz.com/linux/"/>
    <id>http://www.yilnz.com/linux/</id>
    <published>2019-05-08T08:27:12.000Z</published>
    <updated>2021-12-30T08:25:12.456Z</updated>
    
    <content type="html"><![CDATA[<p>用过的linux命令都在这里。<br><a id="more"></a></p><p>passwd [username] 更改用户密码<br>pwd 显示当前目录路径<br>useradd [username] 添加用户<br>ls -a 显示隐藏文件<br>touch [filename] 建立一个空文件<br>cp -r <dir1> <dir2> 递归复制命令<br>less,more [filename] 分页显示文件内容 上一页Ctrl+PgUp,下一页Ctrl+PgDown(Or Space)<br>cat 显示文件内容<br>grep <string> <filename> 在<filename>文件中查找<string> ，在文本中查询内容<br>ls | grep <string> 在列出的文件名中查找<string>,|管道 （将结果交予后面的程序处理)<br>man <command> 查询<command>的手册(使用方法)<br>find [path] -name Hello.java 查找文件<br>ls -l &gt; a.txt 结果输入到a.txt（管道定向命令）<br>ls -l &gt;&gt; a.txt 结果追加到a.txt<br>chmod 666 改变文件权限为全访问<br>cat /etc/group,/etc/passwd 查看组，用户<br>whoami 查看当前组<br>tar -zxvf ???.tar.gz -C /home/server 解压到指定目录.最简化是tar -xf (extract,file=achive必须要), v是verbose,z是gzip方式<br>./xxx &amp; 以后台方式执行xxx(不占据控制台输入)<br>fdisk -l 硬盘参数 hda,IDE硬盘,sda,SATA硬盘,xvda, Xen 虚拟主磁碟<br>df [path] 查看该路径挂载了哪个硬盘分区 df -h 查看硬盘挂载情况<br>mount mnt/cdrom 挂载光驱 mount /dev/sda1 /test/ 把sda1硬盘分区挂载到test<br>umount /boot/ 把boot下面的东西全部卸载掉<br>env 查看环境变量 (vim /etc/profile编辑环境变量),可以看当前SHELL等<br>chsh -s /bin/cash 更改shell<br>ln -s ../test/a.out ./a 在当前目录创建一个a的链接指向../test/a.out<br>history 5 查询最近使用的5个命令,!5执行历史记录编号为5的命令,!ls执行最近用ls开头的命令(神器)<br>ifconfig 同windows的ipconfig<br>ifconfig eth0 192.168.1.2 配置eth0网卡ip地址<br>ifconfig eth0 network 255.255.255.0 配置子网掩码<br>crontab -e 编辑任务调度 crontab -r 清除掉任务 contab -l 列出调度的任务<br>ps aux 列出进程列表<br>kill [pid] 杀死一进程 kill -9 [pid] 强行杀死一进程.kill -9 bash 把别人踢出去<br>top 动态监视内存,top -d 10 ，10秒更新一次，u 查看某一user<br>cal 8 2014 查看2014，8月日历<br>netstat -an 同windows netstat查看端口占用<br>unzip xxx.zip 解压某zip文件，太方便了<br>scp /x/java/workSpace/lalalaServer.zip <a href="mailto:user@121.145.161.85" target="_blank" rel="noopener">user@121.145.161.85</a>:/root/zyl/server远程传递文件<br>&amp; 或 ctrl + Z 指令后台工作,fg恢复到前台(神器)<br>jobs 查询后台程序<br>free 展示内存使用情况<br>uptime 查询开机多久了，多少用户(top,netstat也可看)<br>bin/mysqld_safe –user=root&amp; 启动mysql的时候注意要加user不然它又要报error:13错误(权限问题)<br>vim /etc/profile 修改环境变量要logout重登才能生效(巨坑)<br>netstat -an | grep 3306 查看mysql是否在工作,同ps aux | grep mysql(很乱)<br>ps aux –sort=%mem 以内存排序列出进程<br>pgrep -l mysql 列出mysql的程序名与进程id<br>find / -regex .<em>mysql 查找mysql，用正则表达式<br>apt-cache update 更新源(软件库)<br>apt-cache search xxx 查找xxx软件<br>apt-get install xxx 安装某软件<br>apt-get remove 删除某软件<br>wget <url> 通过url下载软件<br>grep -n “12” ./zyl/zyl.java /home/</url></em> 在/zyl/zyl.java，/home中查找含12的文本文件，显示行数<br>find /home -amin -10 十分钟之内读过的文件或目录(access)<br>find /home -atime -10 十小时之内读过的文件或目录<br>find /home -cmin -10 十小时之内写过的文件或目录<br>find /home -ctime +10 十小时之前写过的文件或目录<br>find /home -size +10k 查找大于10k的文件<br>dpkg -i xxx.deb 安装deb(i 是install)<br>dpkg -r xxx 卸载这个软件,但不删除配置文件<br>dpkg -P xxx 彻底清除这个软件，配置文件一起删<br>dpkg -c xxx.deb 看以下这个deb里面有啥<br>dpkg -s vsftpd 看一下安装了这个vsftpd没<br>bc 计算器<br>mount /dev/sda5 /mnt/diskd5 把D盘挂载到diskd5 (扩展分区=逻辑分区相加,主分区只能有一个，扩展分区+主分区必须&lt;=3)<br>su - steam 换成steam用户<br>cat /etc/issue 查看linux版本<br>Ctrl+Z将某进程终止<br>bg %n 把某进程扔进背景运行(由Stop变为Running)相当于&amp;<br>blkid /dev/sda5 查看/dev/sda5的UUID<br>alias mv=’mv -i’ 重命名<br>which mv 查看mv全路径<br>who 查看登陆的用户<br>echo 查看文字 比如 echo “hahah”    显示 hahah           将文字写进文件echo “hahah” &gt;&gt; haha.txt<br>du -sh <em> 查看文件夹大小<br>rsync -rv –delete </em> <a href="mailto:root@zyl.com" target="_blank" rel="noopener">root@zyl.com</a>:/root/.ssh/xxx 同步本文件夹*<br>update-rc.d 更新rc012345<br>ssh -t <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a> 验证私钥<br>sudo add-apt-repository ppa:fcitx-team/nightly 添加源<br>sudo apt-get update  更新源<br>sudo dpkg –get-selections  查看安装的包<br>dpkg -L gcc 查看GCC的路径<br>netstat -ntlp<br>vipw 等于 vi /etc/passwd<br>ntpdate cn.pool.ntp.org<br>tcpdump -i eth1 -n -S -s 0 -A ‘tcp dst port 80’ | grep -A 60 ‘/oss/callback’<br>/usr/local/redis/bin/redis-cli -p 6379 -a TJKpassword monitor &gt; 1135.log<br>awk ‘/GET/{a[$3]++}END{for(i in a)print i”\t”a[i]}’ 1135.log |sort -k2nr|more<br>awk ‘/GET|SET/{a[$4” “$5]++}END{for(i in a)print i”\t”a[i]}’ 1135.log |sort -k3nr|more<br>awk ‘/GET|SET/{a[$4” “$5]++;b[$4” “$5]+=length($6)}END{for(i in a)print i”\t”a[i]”\t”b[i]}’ 1135.log |sort -k4nr|less<br>ps -eo pid,lstart,etime,cmd | grep tj-im-ser 查看程序启动时间<br>./bin/mysqlbinlog –start-datetime=”2018-08-06 00:00:00” master-bin.00026[2-8] –base64-output=”decode-rows” –database=tj_v3_dev -v | grep tj_tjk_customer_IMweb_config -C 50 &gt; /usr/tomcat/tj-im-service/webconfig-binlog180806-5</string></string></string></filename></filename></string></dir2></dir1></p><p>/usr/local/mysql/bin/mysqlbinlog /usr/local/mysql/data/master-bin.000296</p><p>/usr/local/mysql/bin/mysqlbinlog –start-datetime=”2019-01-18 00:00:00” binlog.000201 –base64-output=”decode-rows” –database=tjk_db_v2 -v</p><p>find . -size +50MB -print -exec rm {} \;</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用过的linux命令都在这里。&lt;br&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://www.yilnz.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Wireshark 抓取Https（MAC)</title>
    <link href="http://www.yilnz.com/Wireshark-%E6%8A%93%E5%8F%96Https%EF%BC%88MAC/"/>
    <id>http://www.yilnz.com/Wireshark-抓取Https（MAC/</id>
    <published>2019-05-08T07:56:25.000Z</published>
    <updated>2021-12-30T08:25:12.456Z</updated>
    
    <content type="html"><![CDATA[<ol><li>设置环境变量 SSLKEYLOGFILE to /Users/zyl/sslkeylog/sslkeylog.log (此方法不顶用）</li><li>用参数运行Chrome:<br><code>open -a Google\ Chrome --args --ssl-key-log-file=/Users/zyl/sslkeylog/sslkeylog.log</code><a id="more"></a></li><li>设置首选项 设置 sslkeylog 位置<br><img src="/images/Wireshark-抓取Https/20190508040417468.png" alt=""></li><li>成功抓包<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ping www.baidu.com</span><br><span class="line">PING www.a.shifen.com (180.97.33.107): 56 data bytes</span><br><span class="line">64 bytes from 180.97.33.107: icmp_seq=0 ttl=54 time=32.693 ms</span><br><span class="line">64 bytes from 180.97.33.107: icmp_seq=1 ttl=54 time=32.372 ms</span><br></pre></td></tr></table></figure></li></ol><p><img src="/images/Wireshark-抓取Https/20190508040105610.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;设置环境变量 SSLKEYLOGFILE to /Users/zyl/sslkeylog/sslkeylog.log (此方法不顶用）&lt;/li&gt;
&lt;li&gt;用参数运行Chrome:&lt;br&gt;&lt;code&gt;open -a Google\ Chrome --args --ssl-key-log-file=/Users/zyl/sslkeylog/sslkeylog.log&lt;/code&gt;
    
    </summary>
    
    
      <category term="https" scheme="http://www.yilnz.com/tags/https/"/>
    
      <category term="wireshark" scheme="http://www.yilnz.com/tags/wireshark/"/>
    
  </entry>
  
  <entry>
    <title>lsof 命令</title>
    <link href="http://www.yilnz.com/lsof-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.yilnz.com/lsof-命令/</id>
    <published>2019-05-07T06:57:20.000Z</published>
    <updated>2021-12-30T08:25:12.456Z</updated>
    
    <content type="html"><![CDATA[<p>在linux环境下，任何事物都以文件的形式存在，通过文件不仅仅可以访问常规数据，还可以访问网络连接和硬件。所以如传输控制协议 (TCP) 和用户数据报协议 (UDP) 套接字等，系统在后台都为该应用程序分配了一个文件描述符，无论这个文件的本质如何，该文件描述符为应用程序与基础操作系统之间的交互提供了通用接口。lsof(list open files)是一个列出当前系统打开文件的工具。</p><a id="more"></a><h4 id="lsof-输出意义"><a href="#lsof-输出意义" class="headerlink" title="lsof 输出意义"></a>lsof 输出意义</h4><p>lsof [options] filename<br>列出开启error.log的进程：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ sudo  lsof /usr/<span class="built_in">local</span>/Cellar/nginx/1.15.5/logs/error.log</span><br><span class="line">COMMAND  PID USER   FD   TYPE DEVICE SIZE/OFF    NODE NAME</span><br><span class="line">nginx   4536 root    2w   REG   1,11   230269 2234613 /usr/<span class="built_in">local</span>/Cellar/nginx/1.15.5/logs/error.log</span><br><span class="line">nginx   4536 root    4w   REG   1,11   230269 2234613 /usr/<span class="built_in">local</span>/Cellar/nginx/1.15.5/logs/error.log</span><br><span class="line">nginx   4537 root    2w   REG   1,11   230269 2234613 /usr/<span class="built_in">local</span>/Cellar/nginx/1.15.5/logs/error.log</span><br><span class="line">nginx   4537 root    4w   REG   1,11   230269 2234613 /usr/<span class="built_in">local</span>/Cellar/nginx/1.15.5/logs/error.log</span><br></pre></td></tr></table></figure></p><p>各列信息含义：</p><ul><li>COMMAND：进程的名称 PID：进程标识符</li><li>USER：进程所有者</li><li>FD：文件描述符，应用程序通过文件描述符识别该文件。如cwd、txt等 TYPE：文件类型，如DIR、REG等</li><li>DEVICE：指定磁盘的名称</li><li>SIZE：文件的大小</li><li>NODE：索引节点（文件在磁盘上的标识）</li><li>NAME：打开文件的确切名称</li><li>FD 列中的文件描述符</li></ul><p>FD: 列中的文件描述符cwd 值表示应用程序的当前工作目录，这是该应用程序启动的目录，除非它本身对这个目录进行更改,txt 类型的文件是程序代码，如应用程序二进制文件本身或共享库，如上列表中显示的 /sbin/init 程序。 </p><p>其次数值表示应用程序的文件描述符，这是打开该文件时返回的一个整数。如上的最后一行文件/dev/initctl，其文件描述符为 10。u 表示该文件被打开并处于读取/写入模式，而不是只读 ® 或只写 (w) 模式。同时还有大写 的W 表示该应用程序具有对整个文件的写锁。该文件描述符用于确保每次只能打开一个应用程序实例。初始打开每个应用程序时，都具有三个文件描述符，<strong>从 0 到 2，分别表示标准输入、输出和错误流。</strong>所以大多数应用程序所打开的文件的 FD 都是从 3 开始。</p><p>与 FD 列相比，Type 列则比较直观。文件和目录分别称为 REG 和 DIR。而CHR 和 BLK，分别表示字符和块设备；或者 UNIX、FIFO 和 IPv4，分别表示 UNIX 域套接字、先进先出 (FIFO) 队列和网际协议 (IP) 套接字。</p><h4 id="查看nginx命令打开的文件："><a href="#查看nginx命令打开的文件：" class="headerlink" title="查看nginx命令打开的文件："></a>查看nginx命令打开的文件：</h4><p>$ sudo lsof -c nginx<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">COMMAND  PID USER   FD     TYPE             DEVICE   SIZE/OFF    NODE NAME</span><br><span class="line">nginx   4536 root  cwd      DIR               1,11        384 2210961 /Users/zyl/Documents/itaojingit/tjk-static/nginx-1.8.0/conf</span><br><span class="line">nginx   4536 root  txt      REG               1,11    1174360 2209488 /usr/<span class="built_in">local</span>/Cellar/nginx/1.15.5/bin/nginx</span><br><span class="line">nginx   4536 root  txt      REG               1,11     423696 2209051 /usr/<span class="built_in">local</span>/Cellar/pcre/8.42/lib/libpcre.1.dylib</span><br><span class="line">nginx   4536 root  txt      REG               1,11     381288 7192696 /usr/<span class="built_in">local</span>/Cellar/openssl/1.0.2q/lib/libssl.1.0.0.dylib</span><br><span class="line">nginx   4536 root  txt      REG               1,11    1871040 7192681 /usr/<span class="built_in">local</span>/Cellar/openssl/1.0.2q/lib/libcrypto.1.0.0.dylib</span><br><span class="line">nginx   4536 root  txt      REG               1,11     837248  645073 /usr/lib/dyld</span><br><span class="line">nginx   4536 root  txt      REG               1,11 1157259264 4759186 /private/var/db/dyld/dyld_shared_cache_x86_64h</span><br><span class="line">nginx   4536 root    0u     CHR                3,2        0t0     318 /dev/null</span><br><span class="line">nginx   4536 root    1u     CHR                3,2        0t0     318 /dev/null</span><br><span class="line">nginx   4536 root    2w     REG               1,11     230269 2234613 /usr/<span class="built_in">local</span>/Cellar/nginx/1.15.5/logs/error.log</span><br><span class="line">nginx   4536 root    3u    unix 0x55563bb99fd25d3b        0t0         -&gt;0x55563bb99fd2394b</span><br><span class="line">nginx   4536 root    4w     REG               1,11     230269 2234613 /usr/<span class="built_in">local</span>/Cellar/nginx/1.15.5/logs/error.log</span><br><span class="line">nginx   4536 root    5u   systm 0x55563bb99e687ddb        0t0         [ctl com.apple.netsrc id 9 unit 49]</span><br><span class="line">nginx   4536 root    6u    unix 0x55563bb99fd23a13        0t0         -&gt;0x55563bb99fd2556b</span><br><span class="line">nginx   4536 root    7u    unix 0x55563bb99fd2394b        0t0         -&gt;0x55563bb99fd25d3b</span><br><span class="line">nginx   4536 root    8w     REG               1,11     186155 2234614 /usr/<span class="built_in">local</span>/Cellar/nginx/1.15.5/logs/access.log</span><br><span class="line">nginx   4536 root    9u    IPv4 0x55563bb99e278143        0t0     TCP *:http (LISTEN)</span><br><span class="line">nginx   4537 root  cwd      DIR               1,11        384 2210961 /Users/zyl/Documents/itaojingit/tjk-static/nginx-1.8.0/conf</span><br><span class="line">nginx   4537 root  txt      REG               1,11    1174360 2209488 /usr/<span class="built_in">local</span>/Cellar/nginx/1.15.5/bin/nginx</span><br><span class="line">nginx   4537 root  txt      REG               1,11     423696 2209051 /usr/<span class="built_in">local</span>/Cellar/pcre/8.42/lib/libpcre.1.dylib</span><br><span class="line">nginx   4537 root  txt      REG               1,11     381288 7192696 /usr/<span class="built_in">local</span>/Cellar/openssl/1.0.2q/lib/libssl.1.0.0.dylib</span><br><span class="line">nginx   4537 root  txt      REG               1,11    1871040 7192681 /usr/<span class="built_in">local</span>/Cellar/openssl/1.0.2q/lib/libcrypto.1.0.0.dylib</span><br><span class="line">nginx   4537 root  txt      REG               1,11     837248  645073 /usr/lib/dyld</span><br><span class="line">nginx   4537 root  txt      REG               1,11 1157259264 4759186 /private/var/db/dyld/dyld_shared_cache_x86_64h</span><br><span class="line">nginx   4537 root    0u     CHR                3,2        0t0     318 /dev/null</span><br><span class="line">nginx   4537 root    1u     CHR                3,2        0t0     318 /dev/null</span><br><span class="line">nginx   4537 root    2w     REG               1,11     230269 2234613 /usr/<span class="built_in">local</span>/Cellar/nginx/1.15.5/logs/error.log</span><br><span class="line">nginx   4537 root    4w     REG               1,11     230269 2234613 /usr/<span class="built_in">local</span>/Cellar/nginx/1.15.5/logs/error.log</span><br><span class="line">nginx   4537 root    5u   systm 0x55563bb99e687ddb        0t0         [ctl com.apple.netsrc id 9 unit 49]</span><br><span class="line">nginx   4537 root    6u    unix 0x55563bb99fd23a13        0t0         -&gt;0x55563bb99fd2556b</span><br><span class="line">nginx   4537 root    7u    unix 0x55563bb99fd2394b        0t0         -&gt;0x55563bb99fd25d3b</span><br><span class="line">nginx   4537 root    8w     REG               1,11     186155 2234614 /usr/<span class="built_in">local</span>/Cellar/nginx/1.15.5/logs/access.log</span><br><span class="line">nginx   4537 root    9u    IPv4 0x55563bb99e278143        0t0     TCP *:http (LISTEN)</span><br><span class="line">nginx   4537 root   10u  KQUEUE                                       count=0, state=0xa</span><br></pre></td></tr></table></figure></p><p>lsof所有参数：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">$ lsof --<span class="built_in">help</span></span><br><span class="line">lsof: illegal option character: -</span><br><span class="line">lsof: illegal option character: e</span><br><span class="line">lsof: no process ID specified</span><br><span class="line">lsof 4.89</span><br><span class="line"> latest revision: ftp://lsof.itap.purdue.edu/pub/tools/unix/lsof/</span><br><span class="line"> latest FAQ: ftp://lsof.itap.purdue.edu/pub/tools/unix/lsof/FAQ</span><br><span class="line"> latest man page: ftp://lsof.itap.purdue.edu/pub/tools/unix/lsof/lsof_man</span><br><span class="line"> usage: [-?abhlnNoOPRtUvV] [+|-c c] [+|-d s] [+D D] [+|-f[cgG]]</span><br><span class="line"> [-F [f]] [-g [s]] [-i [i]] [+|-L [l]] [+|-M] [-o [o]] [-p s]</span><br><span class="line"> [+|-r [t]] [-s [p:s]] [-S [t]] [-T [t]] [-u s] [+|-w] [-x [fl]] [--] [names]</span><br><span class="line">Defaults <span class="keyword">in</span> parentheses; comma-separated <span class="built_in">set</span> (s) items; dash-separated ranges.</span><br><span class="line">  -?|-h list <span class="built_in">help</span>          -a AND selections (OR)     -b avoid kernel blocks</span><br><span class="line">  -c c  cmd c ^c /c/[bix]  +c w  COMMAND width (9)    +d s  dir s files</span><br><span class="line">  -d s  select by FD <span class="built_in">set</span>   +D D  dir D tree *SLOW?*   -i select IPv[46] files</span><br><span class="line">  -l list UID numbers      -n no host names           -N select NFS files</span><br><span class="line">  -o list file offset      -O no overhead *RISKY*     -P no port names</span><br><span class="line">  -R list paRent PID       -s list file size          -t terse listing</span><br><span class="line">  -T <span class="built_in">disable</span> TCP/TPI info  -U select Unix socket      -v list version info</span><br><span class="line">  -V verbose search        +|-w  Warnings (+)         -- end option scan</span><br><span class="line">  +f|-f  +filesystem or -file names     +|-f[cgG] Ct flaGs</span><br><span class="line">  -F [f] select fields; -F? <span class="keyword">for</span> <span class="built_in">help</span></span><br><span class="line">  +|-L [l] list (+) suppress (-) link counts &lt; l (0 = all; default = 0)</span><br><span class="line">  +|-M   portMap registration (-)       -o o   o 0t offset digits (8)</span><br><span class="line">  -p s   exclude(^)|select PIDs         -S [t] t second <span class="built_in">stat</span> timeout (15)</span><br><span class="line">  -T fqs TCP/TPI Fl,Q,St (s) info</span><br><span class="line">  -g [s] exclude(^)|select and <span class="built_in">print</span> process group IDs</span><br><span class="line">  -i i   select by IPv[46] address: [46][proto][@host|addr][:svc_list|port_list]</span><br><span class="line">  +|-r [t[m&lt;fmt&gt;]] repeat every t seconds (15);  + until no files, - forever.</span><br><span class="line">       An optional suffix to t is m&lt;fmt&gt;; m must separate t from &lt;fmt&gt; and</span><br><span class="line">      &lt;fmt&gt; is an strftime(3) format <span class="keyword">for</span> the marker line.</span><br><span class="line">  -s p:s  exclude(^)|select protocol (p = TCP|UDP) states by name(s).</span><br><span class="line">  -u s   exclude(^)|select login|UID <span class="built_in">set</span> s</span><br><span class="line">  -x [fl] cross over +d|+D File systems or symbolic Links</span><br><span class="line">  names  select named files or files on named file systems</span><br><span class="line">Anyone can list all files; /dev warnings disabled; kernel ID check disabled.</span><br></pre></td></tr></table></figure></p><h4 id="查看端口"><a href="#查看端口" class="headerlink" title="查看端口"></a>查看端口</h4><p>lsof -i i   select by IPv[46] address: [46][proto][@host|addr][:svc_list|port_list]<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -i:80</span><br></pre></td></tr></table></figure></p><h4 id="查看TCP-Listen端口"><a href="#查看TCP-Listen端口" class="headerlink" title="查看TCP Listen端口"></a>查看TCP Listen端口</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo lsof -a -i4 -itcp -s TCP:LISTEN -P</span><br><span class="line">sudo lsof -aPi4 -itcp -sTCP:LISTEN</span><br></pre></td></tr></table></figure><p>-a 并且 （默认不加-a是或)</p><h4 id="查看打开的文件夹"><a href="#查看打开的文件夹" class="headerlink" title="查看打开的文件夹"></a>查看打开的文件夹</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo lsof +d /usr/<span class="built_in">local</span>/Cellar/nginx/1.15.5/logs/</span><br><span class="line"><span class="comment">#递归</span></span><br><span class="line">sudo lsof +D /usr/<span class="built_in">local</span>/Cellar/nginx/1.15.5/logs/</span><br></pre></td></tr></table></figure><h4 id="查看某个进程打开的文件"><a href="#查看某个进程打开的文件" class="headerlink" title="查看某个进程打开的文件"></a>查看某个进程打开的文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo lsof -p 3361</span><br></pre></td></tr></table></figure><h4 id="根据文件描述范围列出文件信息"><a href="#根据文件描述范围列出文件信息" class="headerlink" title="根据文件描述范围列出文件信息"></a>根据文件描述范围列出文件信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo lsof -d 2-3</span><br></pre></td></tr></table></figure><h4 id="查找nginx-错误日志在哪"><a href="#查找nginx-错误日志在哪" class="headerlink" title="查找nginx 错误日志在哪"></a>查找nginx 错误日志在哪</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo lsof -a -d 2 -c nginx</span><br><span class="line">COMMAND  PID USER   FD   TYPE DEVICE SIZE/OFF    NODE NAME</span><br><span class="line">nginx   4536 root    2w   REG   1,11   230269 2234613 /usr/<span class="built_in">local</span>/Cellar/nginx/1.15.5/logs/error.log</span><br><span class="line">nginx   4537 root    2w   REG   1,11   230269 2234613 /usr/<span class="built_in">local</span>/Cellar/nginx/1.15.5/logs/error.log</span><br></pre></td></tr></table></figure><p>或者<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo lsof -d 2 | grep nginx</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在linux环境下，任何事物都以文件的形式存在，通过文件不仅仅可以访问常规数据，还可以访问网络连接和硬件。所以如传输控制协议 (TCP) 和用户数据报协议 (UDP) 套接字等，系统在后台都为该应用程序分配了一个文件描述符，无论这个文件的本质如何，该文件描述符为应用程序与基础操作系统之间的交互提供了通用接口。lsof(list open files)是一个列出当前系统打开文件的工具。&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://www.yilnz.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>nginx rewrite 模块</title>
    <link href="http://www.yilnz.com/nginx-rewrite-%E6%A8%A1%E5%9D%97/"/>
    <id>http://www.yilnz.com/nginx-rewrite-模块/</id>
    <published>2019-05-06T02:54:02.000Z</published>
    <updated>2021-12-30T08:25:12.456Z</updated>
    
    <content type="html"><![CDATA[<p>ngx_http_rewrite_module 使用 REPL 来改写URL，实现<strong>重定向</strong>，<strong>重新匹配跳转</strong>，<strong>改写反向代理URL</strong>功能。<br><a id="more"></a></p><h4 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">    location / &#123;</span><br><span class="line">        rewrite http://www.baidu.com;</span><br><span class="line">    &#125;</span><br><span class="line">    location /test1 &#123; #302 临时重定向</span><br><span class="line">        rewrite http://www.baidu.com redirect;</span><br><span class="line">    &#125;</span><br><span class="line">    location /test2 &#123; #301 永久重定向</span><br><span class="line">        rewrite http://www.baidu.com permanent;</span><br><span class="line">    &#125;</span><br><span class="line">    location /test3 &#123;</span><br><span class="line">        return 301 http://www.baidu.com;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="重新匹配跳转"><a href="#重新匹配跳转" class="headerlink" title="重新匹配跳转"></a>重新匹配跳转</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 没有rewrite 后面没有任何 flag 时就顺序执行 </span><br><span class="line"># 当 location 中没有 rewrite 模块指令可被执行时 就重写发起新一轮location匹配</span><br><span class="line">server&#123;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://www.baidu.com;</span><br><span class="line">    &#125;</span><br><span class="line">    location /test1 &#123;</span><br><span class="line">        rewrite ^/test1/(.*) /s?wd=$1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://www.baidu.com;</span><br><span class="line">    &#125;</span><br><span class="line">    location /test1 &#123;</span><br><span class="line">        rewrite ^/test1/(.*) /s?wd=$1 last;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="改写反向代理URL"><a href="#改写反向代理URL" class="headerlink" title="改写反向代理URL"></a>改写反向代理URL</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">    location /test1 &#123;</span><br><span class="line">        rewrite ^/test1/(.*) /s?wd=$1 break;</span><br><span class="line">        proxy_pass http://www.baidu.com;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>P.S. proxy_pass 后面加/，意思是不会添加location的地址到反向代理URL。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ngx_http_rewrite_module 使用 REPL 来改写URL，实现&lt;strong&gt;重定向&lt;/strong&gt;，&lt;strong&gt;重新匹配跳转&lt;/strong&gt;，&lt;strong&gt;改写反向代理URL&lt;/strong&gt;功能。&lt;br&gt;
    
    </summary>
    
    
      <category term="nginx" scheme="http://www.yilnz.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>MIUI_QQ耗电毒瘤关闭没用的功能节约电量</title>
    <link href="http://www.yilnz.com/MIUI-QQ%E8%80%97%E7%94%B5%E6%AF%92%E7%98%A4%E5%85%B3%E9%97%AD%E6%B2%A1%E7%94%A8%E7%9A%84%E5%8A%9F%E8%83%BD%E8%8A%82%E7%BA%A6%E7%94%B5%E9%87%8F/"/>
    <id>http://www.yilnz.com/MIUI-QQ耗电毒瘤关闭没用的功能节约电量/</id>
    <published>2018-11-06T01:42:09.000Z</published>
    <updated>2021-12-30T08:25:12.456Z</updated>
    
    <content type="html"><![CDATA[<p>手机QQ耗电毒瘤，关闭没用的功能节省电量</p><a id="more"></a><p><img src="/images/Hexo1/20181106094846183.png" alt=""></p><ol><li><p>关闭所有没用的动态</p><p>  动态-&gt;右上角点更多-&gt;关闭没用的动态<br>  特别是运动要关闭，计步是非常耗电的</p></li><li><p>把所有不需要的接受消息的群全部屏蔽</p></li><li>MIUI 安全中心-&gt;电量-&gt;QQ智能省电</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;手机QQ耗电毒瘤，关闭没用的功能节省电量&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://www.yilnz.com/tags/Android/"/>
    
      <category term="QQ" scheme="http://www.yilnz.com/tags/QQ/"/>
    
  </entry>
  
  <entry>
    <title>Windows/Mac下黑苹果简易安装步骤【Intel HD Graphics 630】</title>
    <link href="http://www.yilnz.com/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    <id>http://www.yilnz.com/黑苹果/</id>
    <published>2018-10-15T02:07:07.000Z</published>
    <updated>2021-12-30T08:25:12.456Z</updated>
    
    <content type="html"><![CDATA[<p>参考资料：</p><ul><li><a href="http://bbs.pcbeta.com/" target="_blank" rel="noopener">http://bbs.pcbeta.com/</a> 远景论坛</li><li><a href="https://imac.hk/" target="_blank" rel="noopener">https://imac.hk/</a> 黑苹果乐园</li><li><a href="https://www.tonymacx86.com/" target="_blank" rel="noopener">https://www.tonymacx86.com/</a> tonymacx86</li></ul><a id="more"></a><h2 id="Windows-下安装黑苹果"><a href="#Windows-下安装黑苹果" class="headerlink" title="Windows 下安装黑苹果:"></a>Windows 下安装黑苹果:</h2><p>硬件材料准备：两个大于8G的U盘。【若是VGA显示器，需配备PCI/24 转 VGA 转接头（因为是核显，Mac不再支持核显VGA，若是独显则不需要）】</p><ol><li>首先下载 Mac with Clover</li><li>使用TransMac 将镜像拷贝进U盘</li><li>制作WinPE的U盘，插入U盘，重启。进入WindowsPE系统，将要安装MAC的磁盘，MBR转换为GUID分区。</li><li>预留一个300MB的ESP分区，并且格式化一个HFS+的80G硬盘给苹果安装系统。</li><li>重启，进入CloverU盘，磁盘工具，格式化HFS+的80G硬盘为苹果日志式硬盘。</li><li>开始安装苹果，等待安装。</li><li>再此进入WinPE的U盘，将CloverU盘的EFI文件夹拷贝到硬盘的ESP分区，以便脱离U盘可以使用硬盘驱动。重启。</li><li>使用F11 BootMenu进入Clover引导，运行Mac，开始正式安装Mac，等待安装完成。</li><li>进入苹果系统，发现浏览器有花屏，下载Nvida WebDriver显卡驱动，重启。</li><li>再次进入苹果系统，无限循环，无法进入系统，重启，进入WinPEU盘。</li><li>更改ESP的Clover的plist配置，找到并配置<code>&lt;key&gt;Arguments&lt;key&gt; &lt;string&gt;nvda_drv=1 kext-dev-mode=1&lt;/string&gt;</code>，重启进入MAC。</li><li>能再次进入苹果，并且浏览器无花屏，安装完成！</li></ol><h2 id="Mac-下重装黑苹果"><a href="#Mac-下重装黑苹果" class="headerlink" title="Mac 下重装黑苹果"></a>Mac 下重装黑苹果</h2><p>此步骤用于已经安装了黑苹果，想重装系统的方式</p><h4 id="一、安装系统"><a href="#一、安装系统" class="headerlink" title="一、安装系统"></a>一、安装系统</h4><p>无论白苹果、黑苹果，首先需要下载一个新系统，在应用商店搜索 OS X，你就会看到目前最新系统，点 download 下载。</p><h4 id="二、制作U盘"><a href="#二、制作U盘" class="headerlink" title="二、制作U盘"></a>二、制作U盘</h4><p>官方教程： <a href="https://support.apple.com/en-us/HT201372" target="_blank" rel="noopener">https://support.apple.com/en-us/HT201372</a></p><ol><li><p>第一步格式化 U 盘，调出spotlight (Ctrl + Space)，搜索 disk utility，找到自己的 U 盘，格式化为 GUID ，janary 格式，名称可以默认Untitled</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /Applications/Install\ OS\ X\ El\ Capitan.app/Contents/Resources/createinstallmedia --volume /Volumes/Untitled --applicationpath &quot;/Applications/Install OS X El Capitan.app&quot;</span><br></pre></td></tr></table></figure></li><li><p>白苹果的启动盘就制作完成了。</p></li></ol><h4 id="三、插入U盘，启动-Boot-Mac-OS-Install-From-Mac-OS-Install-重装系统"><a href="#三、插入U盘，启动-Boot-Mac-OS-Install-From-Mac-OS-Install-重装系统" class="headerlink" title="三、插入U盘，启动 Boot Mac OS Install From Mac OS Install 重装系统"></a>三、插入U盘，启动 Boot Mac OS Install From Mac OS Install 重装系统</h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考资料：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://bbs.pcbeta.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://bbs.pcbeta.com/&lt;/a&gt; 远景论坛&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://imac.hk/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://imac.hk/&lt;/a&gt; 黑苹果乐园&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.tonymacx86.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.tonymacx86.com/&lt;/a&gt; tonymacx86&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="hackintosh" scheme="http://www.yilnz.com/tags/hackintosh/"/>
    
  </entry>
  
</feed>
